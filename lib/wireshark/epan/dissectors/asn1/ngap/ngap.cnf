# ngap.cnf
# ngap conformation file

#.OPT
PER
ALIGNED
#.END

#.USE_VALS_EXT
CauseRadioNetwork
ProcedureCode
ProtocolIE-ID

#.EXPORTS ONLY_VALS WS_DLL

#.EXPORTS
LastVisitedNGRANCellInformation_PDU
MDT-Configuration_PDU
MobilityRestrictionList_PDU
NGRAN-CGI_PDU
SecondaryRATDataUsageReportTransfer
SONConfigurationTransfer_PDU
SourceNGRANNode-ToTargetNGRANNode-TransparentContainer_PDU
TargetNGRANNode-ToSourceNGRANNode-TransparentContainer_PDU

#.PDU
HandoverCommandTransfer
HandoverPreparationUnsuccessfulTransfer
HandoverRequestAcknowledgeTransfer
HandoverResourceAllocationUnsuccessfulTransfer
LastVisitedNGRANCellInformation
MDT-Configuration
MobilityRestrictionList
NGAP-PDU
NGRAN-CGI
PathSwitchRequestAcknowledgeTransfer
PathSwitchRequestSetupFailedTransfer
PDUSessionResourceModifyUnsuccessfulTransfer
PDUSessionResourceReleaseCommandTransfer
PDUSessionResourceSetupRequestTransfer
PDUSessionResourceSetupResponseTransfer
PDUSessionResourceSetupUnsuccessfulTransfer
SONConfigurationTransfer
SourceNGRANNode-ToTargetNGRANNode-TransparentContainer
TargetNGRANNode-ToSourceNGRANNode-FailureTransparentContainer
TargetNGRANNode-ToSourceNGRANNode-TransparentContainer

#.MAKE_ENUM
GlobalRANNodeID
HandoverType
ProcedureCode
ProtocolIE-ID
RAT-Information

#.NO_EMIT

#.OMIT_ASSIGNMENT
# Get rid of unused code warnings
AlternativeQoSParaSetNotifyIndex
ProtocolIE-FieldPair
ProtocolIE-ContainerList
ProtocolIE-ContainerPair
ProtocolIE-ContainerPairList
Presence
#.END


#.TYPE_RENAME

InitiatingMessage/value InitiatingMessage_value
SuccessfulOutcome/value SuccessfulOutcome_value
UnsuccessfulOutcome/value UnsuccessfulOutcome_value

#.FIELD_RENAME

InitiatingMessage/value initiatingMessagevalue
UnsuccessfulOutcome/value unsuccessfulOutcome_value
SuccessfulOutcome/value successfulOutcome_value


PrivateIE-Field/id private_id
ProtocolExtensionField/id ext_id

PrivateIE-Field/value private_value
ProtocolIE-Field/value ie_field_value

GlobalGNB-ID/gNB-ID globalGNB-ID_gNB-ID
GlobalN3IWF-ID/n3IWF-ID globalN3IWF-ID_n3IWF-ID
GlobalTNGF-ID/tNGF-ID globalTNGF-ID_tNGF-ID
GlobalTWIF-ID/tWIF-ID globalTWIF-ID_tWIF-ID
GlobalW-AGF-ID/w-AGF-ID globalW-AGF-ID_w-AGF-ID

#.FIELD_ATTR
GlobalGNB-ID/gNB-ID       ABBREV=globalGNB_ID.gNB_ID
GlobalN3IWF-ID/n3IWF-ID   ABBREV=globalN3IWF_ID_n3IWF_ID
GlobalTNGF-ID/tNGF-ID     ABBREV=globalTNGF_ID.tNGF_ID
GlobalTWIF-ID/tWIF-ID     ABBREV=globalTWIF_ID.tWIF_ID
GlobalW-AGF-ID/w-AGF-ID   ABBREV=globalW_AGF_ID.w_AGF_ID
UE-associatedLogicalNG-connectionItem/aMF-UE-NGAP-ID ABBREV=AMF_UE_NGAP_ID
UE-associatedLogicalNG-connectionItem/rAN-UE-NGAP-ID ABBREV=RAN_UE_NGAP_ID
UE-NGAP-ID-pair/aMF-UE-NGAP-ID ABBREV=AMF_UE_NGAP_ID
UE-NGAP-ID-pair/rAN-UE-NGAP-ID ABBREV=RAN_UE_NGAP_ID
UE-NGAP-IDs/aMF-UE-NGAP-ID ABBREV=AMF_UE_NGAP_ID

#.FN_BODY ProtocolIE-ID VAL_PTR=&ngap_data->protocol_ie_id
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
%(DEFAULT_BODY)s

#.FN_FTR ProtocolIE-ID
  if (tree) {
    proto_item_append_text(proto_item_get_parent_nth(actx->created_item, 2), ": %s",
                           val_to_str_ext(ngap_data->protocol_ie_id, &ngap_ProtocolIE_ID_vals_ext, "unknown (%d)"));
  }
#.END



#.FN_PARS ProtocolIE-Field/value  FN_VARIANT=_pdu_new  TYPE_REF_FN=dissect_ProtocolIEFieldValue
# Currently not used
# FN_PARS ProtocolIE-FieldPair/firstValue  FN_VARIANT=_pdu_new  TYPE_REF_FN=dissect_ProtocolIEFieldPairFirstValue
# FN_PARS ProtocolIE-FieldPair/secondValue  FN_VARIANT=_pdu_new  TYPE_REF_FN=dissect_ProtocolIEFieldPairSecondValue

#.FN_BODY ProtocolExtensionID  VAL_PTR=&ngap_data->protocol_extension_id
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
%(DEFAULT_BODY)s

#.FN_PARS ProtocolExtensionField/extensionValue  FN_VARIANT=_pdu_new  TYPE_REF_FN=dissect_ProtocolExtensionFieldExtensionValue

#.FN_BODY ProcedureCode  VAL_PTR = &ngap_data->procedure_code
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
%(DEFAULT_BODY)s
#.END

#.FN_PARS InitiatingMessage/value  FN_VARIANT=_pdu_new  TYPE_REF_FN=dissect_InitiatingMessageValue
#.FN_HDR InitiatingMessage/value
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
  ngap_data->message_type = INITIATING_MESSAGE;
#.FN_PARS SuccessfulOutcome/value  FN_VARIANT=_pdu_new  TYPE_REF_FN=dissect_SuccessfulOutcomeValue
#.FN_HDR SuccessfulOutcome/value
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
  ngap_data->message_type = SUCCESSFUL_OUTCOME;
#.FN_PARS UnsuccessfulOutcome/value  FN_VARIANT=_pdu_new  TYPE_REF_FN=dissect_UnsuccessfulOutcomeValue
#.FN_HDR UnsuccessfulOutcome/value
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
  ngap_data->message_type = UNSUCCESSFUL_OUTCOME;

#--- Parameterization is not supported in asn2wrs ---

#ProtocolIE-ContainerList {INTEGER : lowerBound, INTEGER : upperBound, NGAP-PROTOCOL-IES : IEsSetParam} ::=
# SEQUENCE (SIZE (lowerBound..upperBound)) OF
# ProtocolIE-Container {{IEsSetParam}}

# #.FN_PARS ProtocolIE-ContainerList
# MIN_VAL = asn1_param_get_integer(%(ACTX)s,"lowerBound")
# MAX_VAL = asn1_param_get_integer(%(ACTX)s,"upperBound")
# #.FN_HDR ProtocolIE-ContainerList
#   static const asn1_par_def_t ProtocolIE_ContainerList_pars[] = {
#     { "lowerBound", ASN1_PAR_INTEGER },
#     { "upperBound", ASN1_PAR_INTEGER },
#     { NULL, (asn1_par_type)0 }
#   };
#   asn1_stack_frame_check(actx, "ProtocolIE-ContainerList", ProtocolIE_ContainerList_pars);
# #.END

#ProtocolIE-ContainerPairList {INTEGER : lowerBound, INTEGER : upperBound, NGAP-PROTOCOL-IES-PAIR : IEsSetParam} ::=
# SEQUENCE (SIZE (lowerBound..upperBound)) OF
# ProtocolIE-ContainerPair {{IEsSetParam}}

# Currently not used
# FN_PARS ProtocolIE-ContainerPairList
#MIN_VAL = asn1_param_get_integer(%(ACTX)s,"lowerBound")
#MAX_VAL = asn1_param_get_integer(%(ACTX)s,"upperBound")
# FN_HDR ProtocolIE-ContainerPairList
#  static const asn1_par_def_t ProtocolIE_ContainerPairList_pars[] = {
#    { "lowerBound", ASN1_PAR_INTEGER },
#    { "upperBound", ASN1_PAR_INTEGER },
#    { NULL, 0 }
#  };
#  asn1_stack_frame_check(actx, "ProtocolIE-ContainerPairList", ProtocolIE_ContainerPairList_pars);
# END

#PduSessionResource-IE-ContainerList                  { NGAP-PROTOCOL-IES      : IEsSetParam } ::= ProtocolIE-ContainerList     { 1, maxnoofPduSessionResources,   {IEsSetParam} }
# FN_BODY PduSessionResource-IE-ContainerList
#  asn1_stack_frame_push(%(ACTX)s, "ProtocolIE-ContainerList");
#  asn1_param_push_integer(%(ACTX)s, 1);
#  asn1_param_push_integer(%(ACTX)s, maxnoofE_RABs);
# %(DEFAULT_BODY)s
#  asn1_stack_frame_pop(%(ACTX)s, "ProtocolIE-ContainerList");
# END

# PduSessionResource-IE-ContainerPairList              { NGAP-PROTOCOL-IES-PAIR : IEsSetParam } ::= ProtocolIE-ContainerPairList { 1, maxnoofPduSessionResources,   {IEsSetParam} }
# Currently not used
# FN_BODY SAEB-IE-ContainerPairList
#  asn1_stack_frame_push(%(ACTX)s, "ProtocolIE-ContainerPairList");
#  asn1_param_push_integer(%(ACTX)s, 1);
#  asn1_param_push_integer(%(ACTX)s, maxnoofE_RABs);
#%(DEFAULT_BODY)s
#  asn1_stack_frame_pop(%(ACTX)s, "ProtocolIE-ContainerPairList");
# END

# Currently not used
# ProtocolError-IE-ContainerList        { NGAP-PROTOCOL-IES      : IEsSetParam } ::= ProtocolIE-ContainerList     { 1, maxnoofPduSessionResources,   {IEsSetParam} }
# FN_BODY ProtocolError-IE-ContainerList
#  asn1_stack_frame_push(%(ACTX)s, "ProtocolIE-ContainerList");
#  asn1_param_push_integer(%(ACTX)s, 1);
#  asn1_param_push_integer(%(ACTX)s, maxnoofE_RABs);
#%(DEFAULT_BODY)s
#  asn1_stack_frame_pop(%(ACTX)s, "ProtocolIE-ContainerList");
# END

# .FN_HDR PrivateIE-ID
#  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
#  ngap_data->obj_id = NULL;

# FN_BODY PrivateIE-ID/global  FN_VARIANT = _str  VAL_PTR = &ngap_data->obj_id
#  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
# %(DEFAULT_BODY)s

# FN_BODY PrivateIE-Field/value
#  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
#  if (ngap_data->obj_id) {
#    offset = call_per_oid_callback(ngap_data->obj_id, tvb, actx->pinfo, tree, offset, actx, hf_index);
#  } else {
# %(DEFAULT_BODY)s
#  }

#.FN_BODY RAN-UE-NGAP-ID VAL_PTR = &ran_ue_ngap_id
  guint32 ran_ue_ngap_id;
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
%(DEFAULT_BODY)s
  ngap_data->ran_ue_ngap_id = ran_ue_ngap_id;

#.FN_BODY NAS-PDU VAL_PTR = &parameter_tvb

  tvbuff_t *parameter_tvb=NULL;
  guint tvb_len;

%(DEFAULT_BODY)s

  tvb_len = tvb_reported_length(parameter_tvb);
  if (tvb_len > 0) {
    struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
    if (ngap_data->protocol_ie_id == id_NASC) {
      proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_NASC);
      /* use an heuristic based on the payload length to identify the Intra N1 mode
         NAS transparent container or the S1 mode to N1 mode NAS transparent container */
      if (tvb_len == 8)
        de_nas_5gs_s1_mode_to_n1_mode_nas_transparent_cont(parameter_tvb, subtree, actx->pinfo);
      else
        de_nas_5gs_intra_n1_mode_nas_transparent_cont(parameter_tvb, subtree, actx->pinfo);
    } else {
      if (nas_5gs_handle) {
        proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_NAS_PDU);
        TRY {
          call_dissector(nas_5gs_handle, parameter_tvb, actx->pinfo, subtree);
        }
        CATCH_BOUNDS_ERRORS {
          show_exception(tvb, actx->pinfo, subtree, EXCEPT_CODE, GET_MESSAGE);
        }
        ENDTRY;
      }
    }
  }

#.FN_HDR InitialUEMessage
  /* Set the direction of the message */
  actx->pinfo->link_dir=P2P_DIR_UL;

#.FN_HDR DownlinkNASTransport
  /* Set the direction of the message */
  actx->pinfo->link_dir=P2P_DIR_DL;

#.FN_HDR UplinkNASTransport
  /* Set the direction of the message */
  actx->pinfo->link_dir=P2P_DIR_UL;

#.FN_HDR HandoverRequest
  /* Set the direction of the message */
  actx->pinfo->link_dir=P2P_DIR_DL;

#.FN_BODY HandoverType VAL_PTR = &ngap_data->handover_type_value
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
%(DEFAULT_BODY)s

#.FN_BODY SourceToTarget-TransparentContainer VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb;
  proto_tree *subtree;
%(DEFAULT_BODY)s
  if (ngap_dissect_container && parameter_tvb &&
      tvb_reported_length(parameter_tvb) > 0) {
    struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
    /* Don't want elements inside container to write to info column */
    col_set_writable(actx->pinfo->cinfo, COL_INFO, FALSE);
    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_SourceToTarget_TransparentContainer);
    TRY {

        switch(ngap_data->handover_type_value) {
        case intra5gs:
        case eps_to_5gs:
            dissect_ngap_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
            break;
        case fivegs_to_eps:
            dissect_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
            break;
        case fivegs_to_utran:
            dissect_rrc_ToTargetRNC_Container_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
            break;
        default:
            break;
        }
    }
    CATCH_BOUNDS_ERRORS {
          show_exception(tvb, actx->pinfo, tree, EXCEPT_CODE, GET_MESSAGE);
    }
    ENDTRY;

    /* Enable writing of the column again */
    col_set_writable(actx->pinfo->cinfo, COL_INFO, TRUE);
  }

#.FN_BODY TargetToSource-TransparentContainer VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb;
  proto_tree *subtree;
%(DEFAULT_BODY)s
  if (ngap_dissect_container && parameter_tvb &&
      tvb_reported_length(parameter_tvb) > 0) {
    struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
    /* Don't want elements inside container to write to info column */
    col_set_writable(actx->pinfo->cinfo, COL_INFO, FALSE);
    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_TargetToSource_TransparentContainer);
    if (ngap_data->procedure_code == id_HandoverPreparation) {
      switch(ngap_data->handover_type_value) {
      case intra5gs:
      case eps_to_5gs:
        dissect_ngap_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
        break;
      case fivegs_to_eps:
        dissect_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
        break;
      case fivegs_to_utran:
        dissect_rrc_TargetRNC_ToSourceRNC_Container_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
        break;
      default:
        break;
      }
    } else {
      dissect_ngap_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
    }
    /* Enable writing of the column again */
    col_set_writable(actx->pinfo->cinfo, COL_INFO, TRUE);
  }

#.FN_BODY TargettoSource-Failure-TransparentContainer VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb;
  proto_tree *subtree;
%(DEFAULT_BODY)s
  if (ngap_dissect_container && parameter_tvb &&
      tvb_reported_length(parameter_tvb) > 0) {
    struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
    /* Don't want elements inside container to write to info column */
    col_set_writable(actx->pinfo->cinfo, COL_INFO, FALSE);
    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_TargettoSource_Failure_TransparentContainer);
    switch(ngap_data->handover_type_value) {
    case intra5gs:
      dissect_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
      break;
    default:
      break;
    }
    /* Enable writing of the column again */
    col_set_writable(actx->pinfo->cinfo, COL_INFO, TRUE);
  }

#.TYPE_ATTR
ProtocolExtensionID TYPE = FT_UINT8  DISPLAY = BASE_DEC|BASE_EXT_STRING STRINGS = &ngap_ProtocolIE_ID_vals_ext

#.TYPE_ATTR
BitRate DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_bit_sec

#.TYPE_ATTR
MessageIdentifier TYPE = FT_UINT16 DISPLAY = BASE_DEC|BASE_EXT_STRING STRINGS = &lte_rrc_messageIdentifier_vals_ext

#.FN_BODY MessageIdentifier VAL_PTR = &parameter_tvb HF_INDEX = -1
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    actx->created_item = proto_tree_add_item(tree, hf_index, parameter_tvb, 0, 2, ENC_BIG_ENDIAN);
  }

#.FN_BODY SerialNumber VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_SerialNumber);
    proto_tree_add_item(subtree, hf_ngap_SerialNumber_gs, parameter_tvb, 0, 2, ENC_BIG_ENDIAN);
    proto_tree_add_item(subtree, hf_ngap_SerialNumber_msg_code, parameter_tvb, 0, 2, ENC_BIG_ENDIAN);
    proto_tree_add_item(subtree, hf_ngap_SerialNumber_upd_nb, parameter_tvb, 0, 2, ENC_BIG_ENDIAN);
  }

#.TYPE_ATTR
RepetitionPeriod DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_seconds

#.FN_BODY WarningType VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_WarningType);
    proto_tree_add_item(subtree, hf_ngap_WarningType_value, parameter_tvb, 0, 2, ENC_BIG_ENDIAN);
    proto_tree_add_item(subtree, hf_ngap_WarningType_emergency_user_alert, parameter_tvb, 0, 2, ENC_BIG_ENDIAN);
    proto_tree_add_item(subtree, hf_ngap_WarningType_popup, parameter_tvb, 0, 2, ENC_BIG_ENDIAN);
  }

#.FN_BODY DataCodingScheme VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
    proto_tree *subtree;

    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_DataCodingScheme);
    ngap_data->data_coding_scheme = dissect_cbs_data_coding_scheme(parameter_tvb, actx->pinfo, subtree, 0);
  }

#.FN_BODY WarningMessageContents VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_WarningMessageContents);
    dissect_ngap_warningMessageContents(parameter_tvb, subtree, actx->pinfo, ngap_data->data_coding_scheme,
                                        hf_ngap_WarningMessageContents_nb_pages, hf_ngap_WarningMessageContents_decoded_page);
  }

#.FN_BODY EPS-TAI
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
  ngap_data->number_type = E212_TAI;
%(DEFAULT_BODY)s

#.TYPE_ATTR
EPS-TAC TYPE = FT_UINT16 DISPLAY = BASE_DEC_HEX
#.FN_BODY EPS-TAC VAL_PTR = &parameter_tvb HF_INDEX = -1
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    actx->created_item = proto_tree_add_item(tree, hf_index, parameter_tvb, 0, 2, ENC_BIG_ENDIAN);
  }

#.FN_BODY TAI
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
  ngap_data->number_type = E212_5GSTAI;
  ngap_data->tai = wmem_new0(actx->pinfo->pool, struct ngap_tai);
%(DEFAULT_BODY)s
  if (!PINFO_FD_VISITED(actx->pinfo) && ngap_data->ngap_conv &&
      (ngap_data->message_type == INITIATING_MESSAGE) &&
      (ngap_data->procedure_code == id_InitialUEMessage)) {
    guint64 key = (ngap_data->tai->plmn << 24) | ngap_data->tai->tac;

    if (wmem_map_lookup(ngap_data->ngap_conv->nbiot_ta, &key)) {
      wmem_tree_key_t tree_key[3];
      guint32 *id = wmem_new(wmem_file_scope(), guint32);

      *id = ngap_data->ran_ue_ngap_id;
      tree_key[0].length = 1;
      tree_key[0].key = id;
      tree_key[1].length = 1;
      tree_key[1].key = &actx->pinfo->num;
      tree_key[2].length = 0;
      tree_key[2].key = NULL;
      wmem_tree_insert32_array(ngap_data->ngap_conv->nbiot_ran_ue_ngap_id, tree_key, id);
    }
  }

#.TYPE_ATTR
TAC TYPE = FT_UINT24 DISPLAY = BASE_DEC_HEX
#.FN_BODY TAC VAL_PTR = &parameter_tvb HF_INDEX = -1
  tvbuff_t *parameter_tvb = NULL;
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    actx->created_item = proto_tree_add_item(tree, hf_index, parameter_tvb, 0, 3, ENC_BIG_ENDIAN);
    if (ngap_data->supported_ta) {
      ngap_data->supported_ta->tac = tvb_get_ntoh24(parameter_tvb, 0);
    } else if (ngap_data->tai) {
      ngap_data->tai->tac = tvb_get_ntoh24(parameter_tvb, 0);
    }
  }

#.FN_BODY PLMNIdentity  VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
  proto_tree *subtree;
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
  e212_number_type_t number_type = ngap_data->number_type;
  ngap_data->number_type = E212_NONE;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_PLMNIdentity);
    dissect_e212_mcc_mnc(parameter_tvb, actx->pinfo, subtree, 0, number_type, FALSE);
    if (ngap_data->supported_ta) {
      guint32 plmn = tvb_get_ntoh24(parameter_tvb, 0);
      wmem_array_append_one(ngap_data->supported_ta->plmn, plmn);
    } else if (ngap_data->tai) {
      ngap_data->tai->plmn = tvb_get_ntoh24(parameter_tvb, 0);
    }
  }

#.FN_BODY GUAMI
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
  ngap_data->number_type = E212_GUAMI;
%(DEFAULT_BODY)s

#.FN_HDR SupportedTAItem
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);

  if (!PINFO_FD_VISITED(actx->pinfo) &&
      (ngap_data->message_type == INITIATING_MESSAGE) &&
      ((ngap_data->procedure_code == id_NGSetup) ||
       (ngap_data->procedure_code == id_RANConfigurationUpdate))) {
    ngap_data->supported_ta = wmem_new0(actx->pinfo->pool, struct ngap_supported_ta);
    ngap_data->supported_ta->plmn = wmem_array_new(actx->pinfo->pool, sizeof(guint32));
  }

#.FN_FTR SupportedTAItem
  ngap_data->supported_ta = NULL;

#.FN_BODY RAT-Information VAL_PTR = &rat_info
  guint32 rat_info = 0xffffffff;
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
%(DEFAULT_BODY)s
  if (ngap_data->ngap_conv && ngap_data->supported_ta && (rat_info == nb_IoT)) {
    guint64 *key;
    guint i;

    for (i = 0; i < wmem_array_get_count(ngap_data->supported_ta->plmn); i++) {
      key = wmem_new(wmem_file_scope(), guint64);
      *key = ((*(guint32*)wmem_array_index(ngap_data->supported_ta->plmn, i)) << 24) | ngap_data->supported_ta->tac;
      wmem_map_insert(ngap_data->ngap_conv->nbiot_ta, key, GUINT_TO_POINTER(1));
    }
  }

#.FN_BODY TransportLayerAddress VAL_PTR = &parameter_tvb LEN_PTR = &len
  tvbuff_t *parameter_tvb = NULL;
  proto_tree *subtree;
  int len;

%(DEFAULT_BODY)s
  if (!parameter_tvb)
    return offset;

  subtree = proto_item_add_subtree(actx->created_item, ett_ngap_TransportLayerAddress);
  if (len == 32) {
    /* IPv4 */
     proto_tree_add_item(subtree, hf_ngap_transportLayerAddressIPv4, parameter_tvb, 0, 4, ENC_BIG_ENDIAN);
  } else if (len == 128) {
    /* IPv6 */
     proto_tree_add_item(subtree, hf_ngap_transportLayerAddressIPv6, parameter_tvb, 0, 16, ENC_NA);
  } else if (len == 160) {
    /* IPv4 */
     proto_tree_add_item(subtree, hf_ngap_transportLayerAddressIPv4, parameter_tvb, 0, 4, ENC_BIG_ENDIAN);
    /* IPv6 */
     proto_tree_add_item(subtree, hf_ngap_transportLayerAddressIPv6, parameter_tvb, 4, 16, ENC_NA);
  }

#.FN_BODY NGAP-Message VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb;
  proto_tree *subtree;
%(DEFAULT_BODY)s
  if (!parameter_tvb)
    return offset;

  subtree = proto_item_add_subtree(actx->created_item, ett_ngap_NGAP_Message);
  col_set_fence(actx->pinfo->cinfo, COL_INFO);
  call_dissector(ngap_handle, parameter_tvb, actx->pinfo, subtree);

#.FN_BODY NGRANTraceID VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb;
  proto_tree *subtree = NULL;
%(DEFAULT_BODY)s
  if (!parameter_tvb)
    return offset;
  subtree = proto_item_add_subtree(actx->created_item, ett_ngap_NGRANTraceID);
  dissect_e212_mcc_mnc(parameter_tvb, actx->pinfo, subtree, 0, E212_NONE, FALSE);
  proto_tree_add_item(subtree, hf_ngap_NGRANTraceID_TraceID, parameter_tvb, 3, 3, ENC_BIG_ENDIAN);
  proto_tree_add_item(subtree, hf_ngap_NGRANTraceID_TraceRecordingSessionReference, parameter_tvb, 6, 2, ENC_BIG_ENDIAN);

#.FN_BODY NR-CGI
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
  ngap_data->number_type = E212_NRCGI;
%(DEFAULT_BODY)s

#.FIELD_ATTR
NR-CGI/nRCellIdentity ABBREV=NRCellIdentity TYPE=FT_UINT40 DISPLAY=BASE_HEX

#.FN_BODY NRCellIdentity VAL_PTR = &cell_id_tvb HF_INDEX=-1
  tvbuff_t *cell_id_tvb = NULL;
%(DEFAULT_BODY)s
  if (cell_id_tvb) {
    guint64 cell_id = tvb_get_bits64(cell_id_tvb, 0, 36, ENC_BIG_ENDIAN);
    actx->created_item = proto_tree_add_uint64(tree, hf_index, cell_id_tvb, 0, 5, cell_id);
  }

#.FN_BODY EUTRA-CGI
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
  ngap_data->number_type = E212_ECGI;
%(DEFAULT_BODY)s

#.FIELD_ATTR
EUTRA-CGI/eUTRACellIdentity ABBREV=EUTRACellIdentity TYPE=FT_UINT32 DISPLAY=BASE_HEX

#.FN_BODY EUTRACellIdentity VAL_PTR = &cell_id_tvb HF_INDEX=-1
  tvbuff_t *cell_id_tvb = NULL;
%(DEFAULT_BODY)s
  if (cell_id_tvb) {
    guint32 cell_id = tvb_get_bits32(cell_id_tvb, 0, 28, ENC_BIG_ENDIAN);
    actx->created_item = proto_tree_add_uint(tree, hf_index, cell_id_tvb, 0, 4, cell_id);
  }

#.TYPE_ATTR
PacketLossRate DISPLAY = BASE_CUSTOM STRINGS = CF_FUNC(ngap_PacketLossRate_fmt)

#.TYPE_ATTR
PacketDelayBudget DISPLAY = BASE_CUSTOM STRINGS = CF_FUNC(ngap_PacketDelayBudget_fmt)

#.TYPE_ATTR
AveragingWindow DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_milliseconds

#.TYPE_ATTR
MaximumDataBurstVolume DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_byte_bytes

#.FN_BODY InterfacesToTrace VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    static int * const fields[] = {
      &hf_ngap_InterfacesToTrace_NG_C,
      &hf_ngap_InterfacesToTrace_Xn_C,
      &hf_ngap_InterfacesToTrace_Uu,
      &hf_ngap_InterfacesToTrace_F1_C,
      &hf_ngap_InterfacesToTrace_E1,
      &hf_ngap_InterfacesToTrace_reserved,
      NULL
    };
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_InterfacesToTrace);
    proto_tree_add_bitmask_list(subtree, parameter_tvb, 0, 1, fields, ENC_BIG_ENDIAN);
  }

#.TYPE_ATTR
PortNumber TYPE = FT_UINT16 DISPLAY = BASE_DEC

#.FN_BODY PortNumber VAL_PTR = &parameter_tvb HF_INDEX = -1
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    actx->created_item = proto_tree_add_item(tree, hf_index, parameter_tvb, 0, 2, ENC_BIG_ENDIAN);
  }

#.FN_BODY GlobalRANNodeID VAL_PTR = &value
  gint value;
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);

%(DEFAULT_BODY)s
  if (ngap_data->ngap_conv && ngap_data->procedure_code == id_NGSetup) {
    if (addresses_equal(&actx->pinfo->src, &ngap_data->ngap_conv->addr_a) &&
        actx->pinfo->srcport == ngap_data->ngap_conv->port_a) {
      ngap_data->ngap_conv->ranmode_id_a = (GlobalRANNodeID_enum)value;
    } else if (addresses_equal(&actx->pinfo->src, &ngap_data->ngap_conv->addr_b) &&
               actx->pinfo->srcport == ngap_data->ngap_conv->port_b) {
      ngap_data->ngap_conv->ranmode_id_b = (GlobalRANNodeID_enum)value;
    }
  }

#.FN_HDR SourceNGRANNode-ToTargetNGRANNode-TransparentContainer
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);

  ngap_data->transparent_container_type = SOURCE_TO_TARGET_TRANSPARENT_CONTAINER;


#.FN_HDR TargetNGRANNode-ToSourceNGRANNode-TransparentContainer
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);

  ngap_data->transparent_container_type = TARGET_TO_SOURCE_TRANSPARENT_CONTAINER;

#.FN_BODY RRCContainer VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;

%(DEFAULT_BODY)s
  if (parameter_tvb) {
    struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
    proto_tree *subtree;
    GlobalRANNodeID_enum ranmode_id;

    if (ngap_data->transparent_container_type == SOURCE_TO_TARGET_TRANSPARENT_CONTAINER ||
        ngap_data->transparent_container_type == TARGET_TO_SOURCE_TRANSPARENT_CONTAINER) {
      if (actx->pinfo->destport == gbl_ngapSctpPort)
        ranmode_id = ngap_get_ranmode_id(&actx->pinfo->src, actx->pinfo->srcport, actx->pinfo);
      else
        ranmode_id = ngap_get_ranmode_id(&actx->pinfo->dst, actx->pinfo->destport, actx->pinfo);
    } else {
      ranmode_id = (GlobalRANNodeID_enum)-1;
    }
    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_RRCContainer);
    if ((ngap_dissect_target_ng_ran_container_as == NGAP_NG_RAN_CONTAINER_AUTOMATIC &&
         ranmode_id == globalGNB_ID) ||
        (ngap_dissect_target_ng_ran_container_as == NGAP_NG_RAN_CONTAINER_GNB)) {
      if (ngap_data->transparent_container_type == SOURCE_TO_TARGET_TRANSPARENT_CONTAINER) {
        dissect_nr_rrc_HandoverPreparationInformation_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
      } else if (ngap_data->transparent_container_type == TARGET_TO_SOURCE_TRANSPARENT_CONTAINER) {
        dissect_nr_rrc_HandoverCommand_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
      }
    } else if ((ngap_dissect_target_ng_ran_container_as == NGAP_NG_RAN_CONTAINER_AUTOMATIC &&
                ranmode_id == globalNgENB_ID) ||
               (ngap_dissect_target_ng_ran_container_as == NGAP_NG_RAN_CONTAINER_NG_ENB)) {
      if (ngap_data->transparent_container_type == SOURCE_TO_TARGET_TRANSPARENT_CONTAINER) {
        dissect_lte_rrc_HandoverPreparationInformation_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
      } else if (ngap_data->transparent_container_type == TARGET_TO_SOURCE_TRANSPARENT_CONTAINER) {
        dissect_lte_rrc_HandoverCommand_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
      }
    }
  }

#.FN_BODY UERadioCapabilityForPagingOfNB-IoT VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;

%(DEFAULT_BODY)s
  if (parameter_tvb && lte_rrc_ue_radio_paging_info_nb_handle) {
    proto_tree *subtree;

    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_UERadioCapabilityForPagingOfNB_IoT);
    call_dissector(lte_rrc_ue_radio_paging_info_nb_handle, parameter_tvb, actx->pinfo, subtree);
  }

#.FN_BODY UERadioCapabilityForPagingOfNR VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;

%(DEFAULT_BODY)s
  if (parameter_tvb && nr_rrc_ue_radio_paging_info_handle) {
    proto_tree *subtree;

    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_UERadioCapabilityForPagingOfNR);
    call_dissector(nr_rrc_ue_radio_paging_info_handle, parameter_tvb, actx->pinfo, subtree);
  }

#.FN_BODY UERadioCapabilityForPagingOfEUTRA VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;

%(DEFAULT_BODY)s
  if (parameter_tvb && lte_rrc_ue_radio_paging_info_handle) {
    proto_tree *subtree;

    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_UERadioCapabilityForPagingOfEUTRA);
    call_dissector(lte_rrc_ue_radio_paging_info_handle, parameter_tvb, actx->pinfo, subtree);
  }

#.TYPE_ATTR
RecommendedCellItem/timeStayedInCell DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_seconds

#.FN_BODY UERadioCapability VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);

%(DEFAULT_BODY)s
  if (parameter_tvb) {
    proto_tree *subtree;
    volatile dissector_handle_t handle;
    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_UERadioCapability);
    if (ngap_data->procedure_code == id_UERadioCapability_EUTRA_Format) {
      handle = lte_rrc_ue_radio_access_cap_info_handle;
    } else if ((ngap_is_nbiot_ue(actx->pinfo) && ngap_dissect_lte_container_as == NGAP_LTE_CONTAINER_AUTOMATIC) ||
               (ngap_dissect_lte_container_as == NGAP_LTE_CONTAINER_NBIOT)) {
      handle = lte_rrc_ue_radio_access_cap_info_nb_handle;
    } else {
      handle = nr_rrc_ue_radio_access_cap_info_handle;
    }
    if (handle) {
      TRY {
        call_dissector(handle, parameter_tvb, actx->pinfo, subtree);
      }
      CATCH_BOUNDS_ERRORS {
        show_exception(parameter_tvb, actx->pinfo, subtree, EXCEPT_CODE, GET_MESSAGE);
      }
      ENDTRY;
    }
  }

#.FN_BODY TimeStamp VAL_PTR = &timestamp_tvb
  tvbuff_t *timestamp_tvb = NULL;
%(DEFAULT_BODY)s

#.FN_FTR TimeStamp
  if (timestamp_tvb) {
    proto_item_append_text(actx->created_item, " (%s)", tvb_ntp_fmt_ts_sec(timestamp_tvb, 0));
  }

#.FN_BODY RATRestrictionInformation VAL_PTR=&parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    static int * const fields[] = {
      &hf_ngap_RATRestrictionInformation_e_UTRA,
      &hf_ngap_RATRestrictionInformation_nR,
      &hf_ngap_RATRestrictionInformation_nR_unlicensed,
      &hf_ngap_RATRestrictionInformation_reserved,
      NULL
    };
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_RATRestrictionInformation);
    proto_tree_add_bitmask_list(subtree, parameter_tvb, 0, 1, fields, ENC_BIG_ENDIAN);
  }

#.FN_BODY NRencryptionAlgorithms VAL_PTR=&parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    static int * const fields[] = {
      &hf_ngap_NrencryptionAlgorithms_nea1,
      &hf_ngap_NrencryptionAlgorithms_nea2,
      &hf_ngap_NrencryptionAlgorithms_nea3,
      &hf_ngap_NrencryptionAlgorithms_reserved,
      NULL
    };
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_NrencryptionAlgorithms);
    proto_tree_add_bitmask_list(subtree, parameter_tvb, 0, 2, fields, ENC_BIG_ENDIAN);
  }

#.FN_BODY NRintegrityProtectionAlgorithms VAL_PTR=&parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    static int * const fields[] = {
      &hf_ngap_NrintegrityProtectionAlgorithms_nia1,
      &hf_ngap_NrintegrityProtectionAlgorithms_nia2,
      &hf_ngap_NrintegrityProtectionAlgorithms_nia3,
      &hf_ngap_NrintegrityProtectionAlgorithms_reserved,
      NULL
    };
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_NrintegrityProtectionAlgorithms);
    proto_tree_add_bitmask_list(subtree, parameter_tvb, 0, 2, fields, ENC_BIG_ENDIAN);
  }

#.FN_BODY EUTRAencryptionAlgorithms VAL_PTR=&parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    static int * const fields[] = {
      &hf_ngap_EUTRAencryptionAlgorithms_eea1,
      &hf_ngap_EUTRAencryptionAlgorithms_eea2,
      &hf_ngap_EUTRAencryptionAlgorithms_eea3,
      &hf_ngap_EUTRAencryptionAlgorithms_reserved,
      NULL
    };
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_EUTRAencryptionAlgorithms);
    proto_tree_add_bitmask_list(subtree, parameter_tvb, 0, 2, fields, ENC_BIG_ENDIAN);
  }

#.FN_BODY EUTRAintegrityProtectionAlgorithms VAL_PTR=&parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    static int * const fields[] = {
      &hf_ngap_EUTRAintegrityProtectionAlgorithms_eia1,
      &hf_ngap_EUTRAintegrityProtectionAlgorithms_eia2,
      &hf_ngap_EUTRAintegrityProtectionAlgorithms_eia3,
      &hf_ngap_EUTRAintegrityProtectionAlgorithms_reserved,
      NULL
    };
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_EUTRAintegrityProtectionAlgorithms);
    proto_tree_add_bitmask_list(subtree, parameter_tvb, 0, 2, fields, ENC_BIG_ENDIAN);
  }

#.TYPE_ATTR
ExpectedUEMovingTrajectoryItem/timeStayedInCell DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_seconds

#.FN_BODY LastVisitedEUTRANCellInformation VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
  proto_tree *subtree;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_LastVisitedEUTRANCellInformation);
    dissect_s1ap_LastVisitedEUTRANCellInformation_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
  }

#.FN_BODY LastVisitedUTRANCellInformation VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
  proto_tree *subtree;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_LastVisitedUTRANCellInformation);
    dissect_ranap_LastVisitedUTRANCell_Item_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
  }

#.FN_BODY LastVisitedGERANCellInformation VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
  proto_tree *subtree;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_LastVisitedGERANCellInformation);
    dissect_s1ap_LastVisitedGERANCellInformation_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
  }

#.TYPE_ATTR
ExpectedActivityPeriod DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_seconds

#.TYPE_ATTR
ExpectedIdlePeriod DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_seconds

#.TYPE_ATTR
TimeUEStayedInCell DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_seconds

#.TYPE_ATTR
TimeUEStayedInCellEnhancedGranularity DISPLAY=BASE_CUSTOM STRINGS=CF_FUNC(ngap_TimeUEStayedInCellEnhancedGranularity_fmt)

#.TYPE_ATTR
TrafficLoadReductionIndication DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_percent

#.FN_BODY PeriodicRegistrationUpdateTimer VAL_PTR=&val_tvb HF_INDEX=-1
  tvbuff_t *val_tvb = NULL;
%(DEFAULT_BODY)s
  if (val_tvb) {
    guint32 val = tvb_get_guint8(val_tvb, 0);
    actx->created_item = proto_tree_add_uint(tree, hf_index, val_tvb, 0, 1, val);
  }

#.TYPE_ATTR
PeriodicRegistrationUpdateTimer TYPE=FT_UINT8 DISPLAY=BASE_CUSTOM STRINGS=CF_FUNC(ngap_PeriodicRegistrationUpdateTimer_fmt)

#.FN_BODY NASSecurityParametersFromNGRAN VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;

%(DEFAULT_BODY)s
  if (parameter_tvb) {
    proto_tree *subtree;

    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_NASSecurityParametersFromNGRAN);
    de_nas_5gs_n1_mode_to_s1_mode_nas_transparent_cont(parameter_tvb, subtree, actx->pinfo);
  }

#.FN_BODY EN-DCSONConfigurationTransfer VAL_PTR = &parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
  proto_tree *subtree;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_EN_DCSONConfigurationTransfer);
    dissect_s1ap_EN_DCSONConfigurationTransfer_PDU(parameter_tvb, actx->pinfo, subtree, NULL);
  }

#.FN_BODY VolumeTimedReport-Item/startTimeStamp VAL_PTR = &timestamp_tvb
  tvbuff_t *timestamp_tvb = NULL;
%(DEFAULT_BODY)s

#.FN_FTR VolumeTimedReport-Item/startTimeStamp
  if (timestamp_tvb) {
    proto_item_append_text(actx->created_item, " (%s)", tvb_ntp_fmt_ts_sec(timestamp_tvb, 0));
  }

#.FN_BODY VolumeTimedReport-Item/endTimeStamp VAL_PTR = &timestamp_tvb
  tvbuff_t *timestamp_tvb = NULL;
%(DEFAULT_BODY)s

#.FN_FTR VolumeTimedReport-Item/endTimeStamp
  if (timestamp_tvb) {
    proto_item_append_text(actx->created_item, " (%s)", tvb_ntp_fmt_ts_sec(timestamp_tvb, 0));
  }

#.FN_BODY NRPPa-PDU VAL_PTR = &parameter_tvb

  tvbuff_t *parameter_tvb=NULL;

%(DEFAULT_BODY)s

  if ((tvb_reported_length(parameter_tvb)>0)&&(nrppa_handle))
    call_dissector(nrppa_handle, parameter_tvb, %(ACTX)s->pinfo, tree);

#.TYPE_ATTR
VolumeTimedReport-Item/usageCountUL DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_octet_octets

#.TYPE_ATTR
VolumeTimedReport-Item/usageCountDL DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_octet_octets

#.TYPE_ATTR
BluetoothName TYPE=FT_STRING DISPLAY = STR_UNICODE
#.FN_BODY BluetoothName VAL_PTR = &parameter_tvb HF_INDEX = -1
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  actx->created_item = proto_tree_add_item(tree, hf_index, parameter_tvb, 0, -1, ENC_UTF_8|ENC_NA);
#.END

#.FN_BODY BurstArrivalTime VAL_PTR = &burst_arrival_time_tvb
  tvbuff_t *burst_arrival_time_tvb = NULL;
%(DEFAULT_BODY)s
  if (burst_arrival_time_tvb) {
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_BurstArrivalTime);
    dissect_nr_rrc_ReferenceTime_r16_PDU(burst_arrival_time_tvb, actx->pinfo, subtree, NULL);
  }

#.FN_BODY CoverageEnhancementLevel VAL_PTR = &cov_enh_level_tvb
  tvbuff_t *cov_enh_level_tvb;
  proto_tree *subtree;
%(DEFAULT_BODY)s
  if (cov_enh_level_tvb && ngap_dissect_container) {
    subtree = proto_item_add_subtree(actx->created_item, ett_ngap_CoverageEnhancementLevel);
    if ((ngap_is_nbiot_ue(actx->pinfo) && (ngap_dissect_lte_container_as == NGAP_LTE_CONTAINER_AUTOMATIC)) ||
        (ngap_dissect_lte_container_as == NGAP_LTE_CONTAINER_NBIOT)) {
      TRY {
        dissect_lte_rrc_UEPagingCoverageInformation_NB_PDU(cov_enh_level_tvb, actx->pinfo, subtree, NULL);
      }
      CATCH_BOUNDS_ERRORS {
        show_exception(cov_enh_level_tvb, actx->pinfo, subtree, EXCEPT_CODE, GET_MESSAGE);
      }
      ENDTRY;
    } else {
      TRY {
        dissect_lte_rrc_UEPagingCoverageInformation_PDU(cov_enh_level_tvb, actx->pinfo, subtree, NULL);
      }
      CATCH_BOUNDS_ERRORS {
        show_exception(cov_enh_level_tvb, actx->pinfo, subtree, EXCEPT_CODE, GET_MESSAGE);
      }
      ENDTRY;
    }
  }

#.TYPE_ATTR
Extended-ConnectedTime DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_seconds

#.TYPE_ATTR
ExtendedPacketDelayBudget DISPLAY=BASE_CUSTOM STRINGS=CF_FUNC(ngap_ExtendedPacketDelayBudget_fmt)

#.FN_BODY ExtendedRATRestrictionInformation/primaryRATRestriction VAL_PTR=&parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    static int * const fields[] = {
      &hf_ngap_primaryRATRestriction_e_UTRA,
      &hf_ngap_primaryRATRestriction_nR,
      &hf_ngap_primaryRATRestriction_nR_unlicensed,
      &hf_ngap_primaryRATRestriction_reserved,
      NULL
    };
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_primaryRATRestriction);
    proto_tree_add_bitmask_list(subtree, parameter_tvb, 0, 1, fields, ENC_BIG_ENDIAN);
  }

#.FN_BODY ExtendedRATRestrictionInformation/secondaryRATRestriction VAL_PTR=&parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    static int * const fields[] = {
      &hf_ngap_secondaryRATRestriction_e_UTRA,
      &hf_ngap_secondaryRATRestriction_nR,
      &hf_ngap_secondaryRATRestriction_e_UTRA_unlicensed,
      &hf_ngap_secondaryRATRestriction_nR_unlicensed,
      &hf_ngap_secondaryRATRestriction_reserved,
      NULL
    };
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_secondaryRATRestriction);
    proto_tree_add_bitmask_list(subtree, parameter_tvb, 0, 1, fields, ENC_BIG_ENDIAN);
  }

#.FN_BODY LAI
  struct ngap_private_data *ngap_data = ngap_get_private_data(actx->pinfo);
  ngap_data->number_type = E212_LAI;
%(DEFAULT_BODY)s

#.TYPE_ATTR
LAC TYPE = FT_UINT16 DISPLAY = BASE_DEC_HEX
#.FN_BODY LAC VAL_PTR = &parameter_tvb HF_INDEX = -1
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    actx->created_item = proto_tree_add_item(tree, hf_index, parameter_tvb, 0, 2, ENC_BIG_ENDIAN);
  }

#.FN_BODY MDTModeEutra VAL_PTR = &mdt_mode_eutra_tvb
  tvbuff_t *mdt_mode_eutra_tvb = NULL;
%(DEFAULT_BODY)s
  if (mdt_mode_eutra_tvb) {
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_MDTModeEutra);
    dissect_s1ap_MDTMode_PDU(mdt_mode_eutra_tvb, actx->pinfo, subtree, NULL);
  }

#.FN_BODY MeasurementsToActivate VAL_PTR=&parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    static int * const fields[] = {
      &hf_ngap_MeasurementsToActivate_M1,
      &hf_ngap_MeasurementsToActivate_M2,
      &hf_ngap_MeasurementsToActivate_M4,
      &hf_ngap_MeasurementsToActivate_M5,
      &hf_ngap_MeasurementsToActivate_M6,
      &hf_ngap_MeasurementsToActivate_M7,
      &hf_ngap_MeasurementsToActivate_M1_from_event,
      &hf_ngap_MeasurementsToActivate_reserved,
      NULL
    };
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_MeasurementsToActivate);
    proto_tree_add_bitmask_list(subtree, parameter_tvb, 0, 1, fields, ENC_BIG_ENDIAN);
  }

#.FN_BODY MDT-Location-Information VAL_PTR=&parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    static int * const fields[] = {
      &hf_ngap_MDT_Location_Information_GNSS,
      &hf_ngap_MDT_Location_Information_reserved,
      NULL
    };
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_MDT_Location_Information);
    proto_tree_add_bitmask_list(subtree, parameter_tvb, 0, 1, fields, ENC_BIG_ENDIAN);
  }

#.FN_BODY NRMobilityHistoryReport VAL_PTR = &nr_mob_hist_report_tvb
  tvbuff_t *nr_mob_hist_report_tvb = NULL;
%(DEFAULT_BODY)s
  if (nr_mob_hist_report_tvb) {
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_NRMobilityHistoryReport);
    dissect_nr_rrc_VisitedCellInfoList_r16_PDU(nr_mob_hist_report_tvb, actx->pinfo, subtree, NULL);
  }

#.FN_BODY LTEUERLFReportContainer VAL_PTR = &lte_ue_rlf_report_tvb
  tvbuff_t *lte_ue_rlf_report_tvb = NULL;
%(DEFAULT_BODY)s
  if (lte_ue_rlf_report_tvb) {
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_LTEUERLFReportContainer);
    dissect_lte_rrc_RLF_Report_r9_PDU(lte_ue_rlf_report_tvb, actx->pinfo, subtree, NULL);
  }

#.FN_BODY NRUERLFReportContainer VAL_PTR = &nr_ue_rlc_report_tvb
  tvbuff_t *nr_ue_rlc_report_tvb = NULL;
%(DEFAULT_BODY)s
  if (nr_ue_rlc_report_tvb) {
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_NRUERLFReportContainer);
    dissect_nr_rrc_nr_RLF_Report_r16_PDU(nr_ue_rlc_report_tvb, actx->pinfo, subtree, NULL);
  }

#.TYPE_ATTR
Periodicity DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_microseconds

#.TYPE_ATTR
Threshold-RSRP DISPLAY=BASE_CUSTOM STRINGS=CF_FUNC(ngap_Threshold_RSRP_fmt)

#.TYPE_ATTR
Threshold-RSRQ DISPLAY=BASE_CUSTOM STRINGS=CF_FUNC(ngap_Threshold_RSRQ_fmt)

#.TYPE_ATTR
Threshold-SINR DISPLAY=BASE_CUSTOM STRINGS=CF_FUNC(ngap_Threshold_SINR_fmt)

#.TYPE_ATTR
WLANName TYPE=FT_STRING DISPLAY = STR_UNICODE
#.FN_BODY WLANName VAL_PTR = &parameter_tvb HF_INDEX = -1
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  actx->created_item = proto_tree_add_item(tree, hf_index, parameter_tvb, 0, -1, ENC_UTF_8|ENC_NA);
#.END

#.TYPE_ATTR
FiveG-TMSI TYPE = FT_UINT32 DISPLAY = BASE_DEC_HEX
#.FN_BODY FiveG-TMSI VAL_PTR = &parameter_tvb HF_INDEX = -1
  tvbuff_t *parameter_tvb = NULL;
  proto_item *ti;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    actx->created_item = proto_tree_add_item(tree, hf_index, parameter_tvb, 0, 4, ENC_BIG_ENDIAN);
    ti = proto_tree_add_item(tree, hf_3gpp_tmsi, tvb, 0, 4, ENC_BIG_ENDIAN);
    proto_item_set_hidden(ti);
  }

#.FN_BODY GlobalCable-ID VAL_PTR=&parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_GlobalCable_ID);
    proto_tree_add_item(subtree, hf_ngap_GlobalCable_ID_str, parameter_tvb, 0, -1, ENC_UTF_8 | ENC_NA);
  }

#.TYPE_ATTR
QosMonitoringReportingFrequency DISPLAY=BASE_DEC|BASE_UNIT_STRING STRINGS=&units_seconds

#.FN_BODY UpdateFeedback VAL_PTR=&parameter_tvb
  tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
  if (parameter_tvb) {
    static int * const fields[] = {
      &hf_ngap_UpdateFeedback_CN_PDB_DL,
      &hf_ngap_UpdateFeedback_CN_PDB_UL,
      &hf_ngap_UpdateFeedback_reserved,
      NULL
    };
    proto_tree *subtree = proto_item_add_subtree(actx->created_item, ett_ngap_UpdateFeedback);
    proto_tree_add_bitmask_list(subtree, parameter_tvb, 0, 1, fields, ENC_BIG_ENDIAN);
  }

#.FN_BODY PDUSessionResourceSetupRequestTransfer
volatile guint32 _offset;
  _offset = offset;
        TRY {
  _offset = dissect_per_sequence(tvb, _offset, actx, tree, hf_index,
                                   ett_ngap_PDUSessionResourceSetupRequestTransfer, PDUSessionResourceSetupRequestTransfer_sequence);
        }
        CATCH_BOUNDS_ERRORS {
          show_exception(tvb, actx->pinfo, tree, EXCEPT_CODE, GET_MESSAGE);
        }
        ENDTRY;
  offset = _offset;

#.ASSIGN_VALUE_TO_TYPE  # NGAP does not have constants assigned to types, they are pure INTEGER
# ProcedureCode

id-AMFConfigurationUpdate                ProcedureCode
id-AMFStatusIndication                   ProcedureCode
id-CellTrafficTrace                      ProcedureCode
id-DeactivateTrace                       ProcedureCode
id-DownlinkNASTransport                  ProcedureCode
id-DownlinkNonUEAssociatedNRPPaTransport ProcedureCode
id-DownlinkRANConfigurationTransfer      ProcedureCode
id-DownlinkRANStatusTransfer             ProcedureCode
id-DownlinkUEAssociatedNRPPaTransport    ProcedureCode
id-ErrorIndication                       ProcedureCode
id-HandoverCancel                        ProcedureCode
id-HandoverNotification                  ProcedureCode
id-HandoverPreparation                   ProcedureCode
id-HandoverResourceAllocation            ProcedureCode
id-InitialContextSetup                   ProcedureCode
id-InitialUEMessage                      ProcedureCode
id-LocationReportingControl              ProcedureCode
id-LocationReportingFailureIndication    ProcedureCode
id-LocationReport                        ProcedureCode
id-NASNonDeliveryIndication              ProcedureCode
id-NGReset                               ProcedureCode
id-NGSetup                               ProcedureCode
id-OverloadStart                         ProcedureCode
id-OverloadStop                          ProcedureCode
id-Paging                                ProcedureCode
id-PathSwitchRequest                     ProcedureCode
id-PDUSessionResourceModify              ProcedureCode
id-PDUSessionResourceModifyIndication    ProcedureCode
id-PDUSessionResourceRelease             ProcedureCode
id-PDUSessionResourceSetup               ProcedureCode
id-PDUSessionResourceNotify              ProcedureCode
id-PrivateMessage                        ProcedureCode
id-PWSCancel                             ProcedureCode
id-PWSFailureIndication                  ProcedureCode
id-PWSRestartIndication                  ProcedureCode
id-RANConfigurationUpdate                ProcedureCode
id-RerouteNASRequest                     ProcedureCode
id-RRCInactiveTransitionReport           ProcedureCode
id-TraceFailureIndication                ProcedureCode
id-TraceStart                            ProcedureCode
id-UEContextModification                 ProcedureCode
id-UEContextRelease                      ProcedureCode
id-UEContextReleaseRequest               ProcedureCode
id-UERadioCapabilityCheck                ProcedureCode
id-UERadioCapabilityInfoIndication       ProcedureCode
id-UETNLABindingRelease                  ProcedureCode
id-UplinkNASTransport                    ProcedureCode
id-UplinkNonUEAssociatedNRPPaTransport   ProcedureCode
id-UplinkRANConfigurationTransfer        ProcedureCode
id-UplinkRANStatusTransfer               ProcedureCode
id-UplinkUEAssociatedNRPPaTransport      ProcedureCode
id-WriteReplaceWarning                   ProcedureCode
id-SecondaryRATDataUsageReport           ProcedureCode
id-UplinkRIMInformationTransfer          ProcedureCode
id-DownlinkRIMInformationTransfer        ProcedureCode
id-RetrieveUEInformation                 ProcedureCode
id-UEInformationTransfer                 ProcedureCode
id-RANCPRelocationIndication             ProcedureCode
id-UEContextResume                       ProcedureCode
id-UEContextSuspend                      ProcedureCode
id-UERadioCapabilityIDMapping            ProcedureCode
id-HandoverSuccess                       ProcedureCode
id-UplinkRANEarlyStatusTransfer          ProcedureCode
id-DownlinkRANEarlyStatusTransfer        ProcedureCode
id-AMFCPRelocationIndication             ProcedureCode
id-ConnectionEstablishmentIndication     ProcedureCode

# ProtocolIE-ID
id-AllowedNSSAI                                  ProtocolIE-ID
id-AMFName                                       ProtocolIE-ID
id-AMFOverloadResponse                           ProtocolIE-ID
id-AMFSetID                                      ProtocolIE-ID
id-AMF-TNLAssociationFailedToSetupList           ProtocolIE-ID
id-AMF-TNLAssociationSetupList                   ProtocolIE-ID
id-AMF-TNLAssociationToAddList                   ProtocolIE-ID
id-AMF-TNLAssociationToRemoveList                ProtocolIE-ID
id-AMF-TNLAssociationToUpdateList                ProtocolIE-ID
id-AMFTrafficLoadReductionIndication             ProtocolIE-ID
id-AMF-UE-NGAP-ID                                ProtocolIE-ID
id-AssistanceDataForPaging                       ProtocolIE-ID
id-BroadcastCancelledAreaList                    ProtocolIE-ID
id-BroadcastCompletedAreaList                    ProtocolIE-ID
id-CancelAllWarningMessages                      ProtocolIE-ID
id-Cause                                         ProtocolIE-ID
id-CellIDListForRestart                          ProtocolIE-ID
id-ConcurrentWarningMessageInd                   ProtocolIE-ID
id-CoreNetworkAssistanceInformationForInactive   ProtocolIE-ID
id-CriticalityDiagnostics                        ProtocolIE-ID
id-DataCodingScheme                              ProtocolIE-ID
id-DefaultPagingDRX                              ProtocolIE-ID
id-DirectForwardingPathAvailability              ProtocolIE-ID
id-EmergencyAreaIDListForRestart                 ProtocolIE-ID
id-EmergencyFallbackIndicator                    ProtocolIE-ID
id-EUTRA-CGI                                     ProtocolIE-ID
id-FiveG-S-TMSI                                  ProtocolIE-ID
id-GlobalRANNodeID                               ProtocolIE-ID
id-GUAMI                                         ProtocolIE-ID
id-HandoverType                                  ProtocolIE-ID
id-IMSVoiceSupportIndicator                      ProtocolIE-ID
id-IndexToRFSP                                   ProtocolIE-ID
id-InfoOnRecommendedCellsAndRANNodesForPaging    ProtocolIE-ID
id-LocationReportingRequestType                  ProtocolIE-ID
id-MaskedIMEISV                                  ProtocolIE-ID
id-MessageIdentifier                             ProtocolIE-ID
id-MobilityRestrictionList                       ProtocolIE-ID
id-NASC                                          ProtocolIE-ID
id-NAS-PDU                                       ProtocolIE-ID
id-NASSecurityParametersFromNGRAN                ProtocolIE-ID
id-NewAMF-UE-NGAP-ID                             ProtocolIE-ID
id-NewSecurityContextInd                         ProtocolIE-ID
id-NGAP-Message                                  ProtocolIE-ID
id-NGRAN-CGI                                     ProtocolIE-ID
id-NGRANTraceID                                  ProtocolIE-ID
id-NR-CGI                                        ProtocolIE-ID
id-NRPPa-PDU                                     ProtocolIE-ID
id-NumberOfBroadcastsRequested                   ProtocolIE-ID
id-OldAMF                                        ProtocolIE-ID
id-OverloadStartNSSAIList                        ProtocolIE-ID
id-PagingDRX                                     ProtocolIE-ID
id-PagingOrigin                                  ProtocolIE-ID
id-PagingPriority                                ProtocolIE-ID
id-PDUSessionResourceAdmittedList                ProtocolIE-ID
id-PDUSessionResourceFailedToModifyListModRes    ProtocolIE-ID
id-PDUSessionResourceFailedToSetupListCxtRes     ProtocolIE-ID
id-PDUSessionResourceFailedToSetupListHOAck      ProtocolIE-ID
id-PDUSessionResourceFailedToSetupListPSReq      ProtocolIE-ID
id-PDUSessionResourceFailedToSetupListSURes      ProtocolIE-ID
id-PDUSessionResourceHandoverList                ProtocolIE-ID
id-PDUSessionResourceListCxtRelCpl               ProtocolIE-ID
id-PDUSessionResourceListHORqd                   ProtocolIE-ID
id-PDUSessionResourceModifyListModCfm            ProtocolIE-ID
id-PDUSessionResourceModifyListModInd            ProtocolIE-ID
id-PDUSessionResourceModifyListModReq            ProtocolIE-ID
id-PDUSessionResourceModifyListModRes            ProtocolIE-ID
id-PDUSessionResourceNotifyList                  ProtocolIE-ID
id-PDUSessionResourceReleasedListNot             ProtocolIE-ID
id-PDUSessionResourceReleasedListPSAck           ProtocolIE-ID
id-PDUSessionResourceReleasedListPSFail          ProtocolIE-ID
id-PDUSessionResourceReleasedListRelRes          ProtocolIE-ID
id-PDUSessionResourceSetupListCxtReq             ProtocolIE-ID
id-PDUSessionResourceSetupListCxtRes             ProtocolIE-ID
id-PDUSessionResourceSetupListHOReq              ProtocolIE-ID
id-PDUSessionResourceSetupListSUReq              ProtocolIE-ID
id-PDUSessionResourceSetupListSURes              ProtocolIE-ID
id-PDUSessionResourceToBeSwitchedDLList	         ProtocolIE-ID
id-PDUSessionResourceSwitchedList                ProtocolIE-ID
id-PDUSessionResourceToReleaseListHOCmd          ProtocolIE-ID
id-PDUSessionResourceToReleaseListRelCmd         ProtocolIE-ID
id-PLMNSupportList                               ProtocolIE-ID
id-PWSFailedCellIDList                           ProtocolIE-ID
id-RANNodeName                                   ProtocolIE-ID
id-RANPagingPriority                             ProtocolIE-ID
id-RANStatusTransfer-TransparentContainer        ProtocolIE-ID
id-RAN-UE-NGAP-ID                                ProtocolIE-ID
id-RelativeAMFCapacity                           ProtocolIE-ID
id-RepetitionPeriod                              ProtocolIE-ID
id-ResetType                                     ProtocolIE-ID
id-RoutingID                                     ProtocolIE-ID
id-RRCEstablishmentCause                         ProtocolIE-ID
id-RRCInactiveTransitionReportRequest            ProtocolIE-ID
id-RRCState                                      ProtocolIE-ID
id-SecurityContext                               ProtocolIE-ID
id-SecurityKey                                   ProtocolIE-ID
id-SerialNumber                                  ProtocolIE-ID
id-ServedGUAMIList                               ProtocolIE-ID
id-SliceSupportList                              ProtocolIE-ID
id-SONConfigurationTransferDL                    ProtocolIE-ID
id-SONConfigurationTransferUL                    ProtocolIE-ID
id-SourceAMF-UE-NGAP-ID                          ProtocolIE-ID
id-SourceToTarget-TransparentContainer           ProtocolIE-ID
id-SupportedTAList                               ProtocolIE-ID
id-TAIListForPaging                              ProtocolIE-ID
id-TAIListForRestart                             ProtocolIE-ID
id-TargetID                                      ProtocolIE-ID
id-TargetToSource-TransparentContainer           ProtocolIE-ID
id-TimeToWait                                    ProtocolIE-ID
id-TraceActivation                               ProtocolIE-ID
id-TraceCollectionEntityIPAddress                ProtocolIE-ID
id-UEAggregateMaximumBitRate                     ProtocolIE-ID
id-UE-associatedLogicalNG-connectionList         ProtocolIE-ID
id-UEContextRequest                              ProtocolIE-ID
id-UE-NGAP-IDs                                   ProtocolIE-ID
id-UEPagingIdentity                              ProtocolIE-ID
id-UEPresenceInAreaOfInterestList                ProtocolIE-ID
id-UERadioCapability                             ProtocolIE-ID
id-UERadioCapabilityForPaging                    ProtocolIE-ID
id-UESecurityCapabilities                        ProtocolIE-ID
id-UnavailableGUAMIList                          ProtocolIE-ID
id-UserLocationInformation                       ProtocolIE-ID
id-WarningAreaList                               ProtocolIE-ID
id-WarningMessageContents                        ProtocolIE-ID
id-WarningSecurityInfo                           ProtocolIE-ID
id-WarningType                                   ProtocolIE-ID
id-AdditionalUL-NGU-UP-TNLInformation            ProtocolIE-ID
id-DataForwardingNotPossible                     ProtocolIE-ID
id-DL-NGU-UP-TNLInformation                      ProtocolIE-ID
id-NetworkInstance                               ProtocolIE-ID
id-PDUSessionAggregateMaximumBitRate             ProtocolIE-ID
id-PDUSessionResourceFailedToModifyListModCfm    ProtocolIE-ID
id-PDUSessionResourceFailedToSetupListCxtFail    ProtocolIE-ID
id-PDUSessionResourceListCxtRelReq               ProtocolIE-ID
id-PDUSessionType                                ProtocolIE-ID
id-QosFlowAddOrModifyRequestList                 ProtocolIE-ID
id-QosFlowSetupRequestList                       ProtocolIE-ID
id-QosFlowToReleaseList                          ProtocolIE-ID
id-SecurityIndication                            ProtocolIE-ID
id-UL-NGU-UP-TNLInformation                      ProtocolIE-ID
id-UL-NGU-UP-TNLModifyList                       ProtocolIE-ID
id-WarningAreaCoordinates                        ProtocolIE-ID
id-PDUSessionResourceSecondaryRATUsageList       ProtocolIE-ID
id-HandoverFlag                                  ProtocolIE-ID
id-SecondaryRATUsageInformation                  ProtocolIE-ID
id-PDUSessionResourceReleaseResponseTransfer     ProtocolIE-ID
id-RedirectionVoiceFallback                      ProtocolIE-ID
id-UERetentionInformation                        ProtocolIE-ID
id-S-NSSAI                                       ProtocolIE-ID
id-PSCellInformation                             ProtocolIE-ID
id-LastEUTRAN-PLMNIdentity                       ProtocolIE-ID
id-MaximumIntegrityProtectedDataRate-DL          ProtocolIE-ID
id-AdditionalDLForwardingUPTNLInformation        ProtocolIE-ID
id-AdditionalDLUPTNLInformationForHOList         ProtocolIE-ID
id-AdditionalNGU-UP-TNLInformation               ProtocolIE-ID
id-AdditionalDLQosFlowPerTNLInformation          ProtocolIE-ID
id-SecurityResult                                ProtocolIE-ID
id-ENDC-SONConfigurationTransferDL               ProtocolIE-ID
id-ENDC-SONConfigurationTransferUL               ProtocolIE-ID
id-OldAssociatedQosFlowList-ULendmarkerexpected  ProtocolIE-ID
id-CNTypeRestrictionsForEquivalent               ProtocolIE-ID
id-CNTypeRestrictionsForServing                  ProtocolIE-ID
id-NewGUAMI                                      ProtocolIE-ID
id-ULForwarding                                  ProtocolIE-ID
id-ULForwardingUP-TNLInformation                 ProtocolIE-ID
id-CNAssistedRANTuning                           ProtocolIE-ID
id-CommonNetworkInstance                         ProtocolIE-ID
id-NGRAN-TNLAssociationToRemoveList              ProtocolIE-ID
id-TNLAssociationTransportLayerAddressNGRAN      ProtocolIE-ID
id-EndpointIPAddressAndPort                      ProtocolIE-ID
id-LocationReportingAdditionalInfo               ProtocolIE-ID
id-SourceToTarget-AMFInformationReroute          ProtocolIE-ID
id-AdditionalULForwardingUPTNLInformation        ProtocolIE-ID
id-SCTP-TLAs                                     ProtocolIE-ID
id-SelectedPLMNIdentity                          ProtocolIE-ID
id-RIMInformationTransfer                        ProtocolIE-ID
id-GUAMIType                                     ProtocolIE-ID
id-SRVCCOperationPossible                        ProtocolIE-ID
id-TargetRNC-ID                                  ProtocolIE-ID
id-RAT-Information                               ProtocolIE-ID
id-ExtendedRATRestrictionInformation             ProtocolIE-ID
id-QosMonitoringRequest                          ProtocolIE-ID
id-SgNB-UE-X2AP-ID                               ProtocolIE-ID
id-AdditionalRedundantDL-NGU-UP-TNLInformation   ProtocolIE-ID
id-AdditionalRedundantDLQosFlowPerTNLInformation ProtocolIE-ID
id-AdditionalRedundantNGU-UP-TNLInformation      ProtocolIE-ID
id-AdditionalRedundantUL-NGU-UP-TNLInformation   ProtocolIE-ID
id-CNPacketDelayBudgetDL                         ProtocolIE-ID
id-CNPacketDelayBudgetUL                         ProtocolIE-ID
id-ExtendedPacketDelayBudget                     ProtocolIE-ID
id-RedundantCommonNetworkInstance                ProtocolIE-ID
id-RedundantDL-NGU-TNLInformationReused          ProtocolIE-ID
id-RedundantDL-NGU-UP-TNLInformation             ProtocolIE-ID
id-RedundantDLQosFlowPerTNLInformation           ProtocolIE-ID
id-RedundantQosFlowIndicator                     ProtocolIE-ID
id-RedundantUL-NGU-UP-TNLInformation             ProtocolIE-ID
id-TSCTrafficCharacteristics                     ProtocolIE-ID
id-RedundantPDUSessionInformation                ProtocolIE-ID
id-UsedRSNInformation                            ProtocolIE-ID
id-IAB-Authorized                                ProtocolIE-ID
id-IAB-Supported                                 ProtocolIE-ID
id-IABNodeIndication                             ProtocolIE-ID
id-NB-IoT-PagingDRX                              ProtocolIE-ID
id-NB-IoT-Paging-eDRXInfo                        ProtocolIE-ID
id-NB-IoT-DefaultPagingDRX                       ProtocolIE-ID
id-Enhanced-CoverageRestriction                  ProtocolIE-ID
id-Extended-ConnectedTime                        ProtocolIE-ID
id-PagingAssisDataforCEcapabUE                   ProtocolIE-ID
id-WUS-Assistance-Information                    ProtocolIE-ID
id-UE-DifferentiationInfo                        ProtocolIE-ID
id-NB-IoT-UEPriority                             ProtocolIE-ID
id-UL-CP-SecurityInformation                     ProtocolIE-ID
id-DL-CP-SecurityInformation                     ProtocolIE-ID
id-TAI                                           ProtocolIE-ID
id-UERadioCapabilityForPagingOfNB-IoT            ProtocolIE-ID
id-LTEV2XServicesAuthorized                      ProtocolIE-ID
id-NRV2XServicesAuthorized                       ProtocolIE-ID
id-LTEUESidelinkAggregateMaximumBitrate          ProtocolIE-ID
id-NRUESidelinkAggregateMaximumBitrate           ProtocolIE-ID
id-PC5QoSParameters                              ProtocolIE-ID
id-AlternativeQoSParaSetList                     ProtocolIE-ID
id-CurrentQoSParaSetIndex                        ProtocolIE-ID
id-CEmodeBrestricted                             ProtocolIE-ID
id-PagingeDRXInformation                         ProtocolIE-ID
id-CEmodeBSupport-Indicator                      ProtocolIE-ID
id-LTEM-Indication                               ProtocolIE-ID
id-EndIndication                                 ProtocolIE-ID
id-EDT-Session                                   ProtocolIE-ID
id-UECapabilityInfoRequest                       ProtocolIE-ID
id-PDUSessionResourceFailedToResumeListRESReq    ProtocolIE-ID
id-PDUSessionResourceFailedToResumeListRESRes    ProtocolIE-ID
id-PDUSessionResourceSuspendListSUSReq           ProtocolIE-ID
id-PDUSessionResourceResumeListRESReq            ProtocolIE-ID
id-PDUSessionResourceResumeListRESRes            ProtocolIE-ID
id-UE-UP-CIoT-Support                            ProtocolIE-ID
id-Suspend-Request-Indication                    ProtocolIE-ID
id-Suspend-Response-Indication                   ProtocolIE-ID
id-RRC-Resume-Cause                              ProtocolIE-ID
id-RGLevelWirelineAccessCharacteristics          ProtocolIE-ID
id-W-AGFIdentityInformation                      ProtocolIE-ID
id-GlobalTNGF-ID                                 ProtocolIE-ID
id-GlobalTWIF-ID                                 ProtocolIE-ID
id-GlobalW-AGF-ID                                ProtocolIE-ID
id-UserLocationInformationW-AGF                  ProtocolIE-ID
id-UserLocationInformationTNGF                   ProtocolIE-ID
id-AuthenticatedIndication                       ProtocolIE-ID
id-TNGFIdentityInformation                       ProtocolIE-ID
id-TWIFIdentityInformation                       ProtocolIE-ID
id-UserLocationInformationTWIF                   ProtocolIE-ID
id-DataForwardingResponseERABList                ProtocolIE-ID
id-IntersystemSONConfigurationTransferDL         ProtocolIE-ID
id-IntersystemSONConfigurationTransferUL         ProtocolIE-ID
id-SONInformationReport                          ProtocolIE-ID
id-UEHistoryInformationFromTheUE                 ProtocolIE-ID
id-ManagementBasedMDTPLMNList                    ProtocolIE-ID
id-MDTConfiguration                              ProtocolIE-ID
id-PrivacyIndicator                              ProtocolIE-ID
id-TraceCollectionEntityURI                      ProtocolIE-ID
id-NPN-Support                                   ProtocolIE-ID
id-NPN-AccessInformation                         ProtocolIE-ID
id-NPN-PagingAssistanceInformation               ProtocolIE-ID
id-NPN-MobilityInformation                       ProtocolIE-ID
id-TargettoSource-Failure-TransparentContainer   ProtocolIE-ID
id-NID                                           ProtocolIE-ID
id-UERadioCapabilityID                           ProtocolIE-ID
id-UERadioCapability-EUTRA-Format                ProtocolIE-ID
id-DAPSRequestInfo                               ProtocolIE-ID
id-DAPSResponseInfoList                          ProtocolIE-ID
id-EarlyStatusTransfer-TransparentContainer      ProtocolIE-ID
id-NotifySourceNGRANNode                         ProtocolIE-ID
id-ExtendedSliceSupportList                      ProtocolIE-ID
id-ExtendedTAISliceSupportList                   ProtocolIE-ID
id-ConfiguredTACIndication                       ProtocolIE-ID
id-Extended-RANNodeName                          ProtocolIE-ID
id-Extended-AMFName                              ProtocolIE-ID
id-GlobalCable-ID                                ProtocolIE-ID
id-QosMonitoringReportingFrequency               ProtocolIE-ID
id-QosFlowParametersList                         ProtocolIE-ID
id-QosFlowFeedbackList                           ProtocolIE-ID
id-BurstArrivalTimeDownlink                      ProtocolIE-ID
id-ExtendedUEIdentityIndexValue                  ProtocolIE-ID
id-PduSessionExpectedUEActivityBehaviour         ProtocolIE-ID
id-MicoAllPLMN                                   ProtocolIE-ID
id-QosFlowFailedToSetupList                      ProtocolIE-ID
#.END


#.REGISTER

#NGAP-PROTOCOL-IES

AllowedNSSAI                                N ngap.ies id-AllowedNSSAI
AMFName                                     N ngap.ies id-AMFName
OverloadResponse                            N ngap.ies id-AMFOverloadResponse
AMFSetID                                    N ngap.ies id-AMFSetID
TNLAssociationList                          N ngap.ies id-AMF-TNLAssociationFailedToSetupList
AMF-TNLAssociationSetupList                 N ngap.ies id-AMF-TNLAssociationSetupList
AMF-TNLAssociationToAddList                 N ngap.ies id-AMF-TNLAssociationToAddList
AMF-TNLAssociationToRemoveList              N ngap.ies id-AMF-TNLAssociationToRemoveList
AMF-TNLAssociationToUpdateList              N ngap.ies id-AMF-TNLAssociationToUpdateList
TrafficLoadReductionIndication              N ngap.ies id-AMFTrafficLoadReductionIndication
AMF-UE-NGAP-ID                              N ngap.ies id-AMF-UE-NGAP-ID
AssistanceDataForPaging                     N ngap.ies id-AssistanceDataForPaging
BroadcastCancelledAreaList                  N ngap.ies id-BroadcastCancelledAreaList
BroadcastCompletedAreaList                  N ngap.ies id-BroadcastCompletedAreaList
CancelAllWarningMessages                    N ngap.ies id-CancelAllWarningMessages
Cause                                       N ngap.ies id-Cause
CellIDListForRestart                        N ngap.ies id-CellIDListForRestart
ConcurrentWarningMessageInd                 N ngap.ies id-ConcurrentWarningMessageInd
CoreNetworkAssistanceInformationForInactive N ngap.ies id-CoreNetworkAssistanceInformationForInactive
CriticalityDiagnostics                      N ngap.ies id-CriticalityDiagnostics
DataCodingScheme                            N ngap.ies id-DataCodingScheme
PagingDRX                                   N ngap.ies id-DefaultPagingDRX
DirectForwardingPathAvailability            N ngap.ies id-DirectForwardingPathAvailability
EmergencyAreaIDListForRestart               N ngap.ies id-EmergencyAreaIDListForRestart
EmergencyFallbackIndicator                  N ngap.ies id-EmergencyFallbackIndicator
EUTRA-CGI                                   N ngap.ies id-EUTRA-CGI
FiveG-S-TMSI                                N ngap.ies id-FiveG-S-TMSI
GlobalRANNodeID                             N ngap.ies id-GlobalRANNodeID
GUAMI                                       N ngap.ies id-GUAMI
HandoverType                                N ngap.ies id-HandoverType
IMSVoiceSupportIndicator                    N ngap.ies id-IMSVoiceSupportIndicator
IndexToRFSP                                 N ngap.ies id-IndexToRFSP
InfoOnRecommendedCellsAndRANNodesForPaging  N ngap.ies id-InfoOnRecommendedCellsAndRANNodesForPaging
LocationReportingRequestType                N ngap.ies id-LocationReportingRequestType
MaskedIMEISV                                N ngap.ies id-MaskedIMEISV
MessageIdentifier                           N ngap.ies id-MessageIdentifier
MobilityRestrictionList                     N ngap.ies id-MobilityRestrictionList
NAS-PDU	                                    N ngap.ies id-NASC
NAS-PDU                                     N ngap.ies id-NAS-PDU
NASSecurityParametersFromNGRAN              N ngap.ies id-NASSecurityParametersFromNGRAN
AMF-UE-NGAP-ID                              N ngap.ies id-NewAMF-UE-NGAP-ID
NewSecurityContextInd                       N ngap.ies id-NewSecurityContextInd
NGAP-Message                                N ngap.ies id-NGAP-Message
NGRAN-CGI                                   N ngap.ies id-NGRAN-CGI
NGRANTraceID                                N ngap.ies id-NGRANTraceID
NR-CGI                                      N ngap.ies id-NR-CGI
NRPPa-PDU                                   N ngap.ies id-NRPPa-PDU
NumberOfBroadcastsRequested                 N ngap.ies id-NumberOfBroadcastsRequested
AMFName                                     N ngap.ies id-OldAMF
OverloadStartNSSAIList                      N ngap.ies id-OverloadStartNSSAIList
PagingDRX                                   N ngap.ies id-PagingDRX
PagingOrigin                                N ngap.ies id-PagingOrigin
PagingPriority                              N ngap.ies id-PagingPriority
PDUSessionResourceAdmittedList              N ngap.ies id-PDUSessionResourceAdmittedList
PDUSessionResourceFailedToModifyListModRes  N ngap.ies id-PDUSessionResourceFailedToModifyListModRes
PDUSessionResourceFailedToSetupListCxtRes   N ngap.ies id-PDUSessionResourceFailedToSetupListCxtRes
PDUSessionResourceFailedToSetupListHOAck    N ngap.ies id-PDUSessionResourceFailedToSetupListHOAck
PDUSessionResourceFailedToSetupListPSReq    N ngap.ies id-PDUSessionResourceFailedToSetupListPSReq
PDUSessionResourceFailedToSetupListSURes    N ngap.ies id-PDUSessionResourceFailedToSetupListSURes
PDUSessionResourceHandoverList              N ngap.ies id-PDUSessionResourceHandoverList
PDUSessionResourceListCxtRelCpl             N ngap.ies id-PDUSessionResourceListCxtRelCpl
PDUSessionResourceListHORqd                 N ngap.ies id-PDUSessionResourceListHORqd
PDUSessionResourceModifyListModCfm          N ngap.ies id-PDUSessionResourceModifyListModCfm
PDUSessionResourceModifyListModInd          N ngap.ies id-PDUSessionResourceModifyListModInd
PDUSessionResourceModifyListModReq          N ngap.ies id-PDUSessionResourceModifyListModReq
PDUSessionResourceModifyListModRes          N ngap.ies id-PDUSessionResourceModifyListModRes
PDUSessionResourceNotifyList                N ngap.ies id-PDUSessionResourceNotifyList
PDUSessionResourceReleasedListNot           N ngap.ies id-PDUSessionResourceReleasedListNot
PDUSessionResourceReleasedListPSAck         N ngap.ies id-PDUSessionResourceReleasedListPSAck
PDUSessionResourceReleasedListPSFail        N ngap.ies id-PDUSessionResourceReleasedListPSFail
PDUSessionResourceReleasedListRelRes        N ngap.ies id-PDUSessionResourceReleasedListRelRes
PDUSessionResourceSetupListCxtReq           N ngap.ies id-PDUSessionResourceSetupListCxtReq
PDUSessionResourceSetupListCxtRes           N ngap.ies id-PDUSessionResourceSetupListCxtRes
PDUSessionResourceSetupListHOReq            N ngap.ies id-PDUSessionResourceSetupListHOReq
PDUSessionResourceSetupListSUReq            N ngap.ies id-PDUSessionResourceSetupListSUReq
PDUSessionResourceSetupListSURes            N ngap.ies id-PDUSessionResourceSetupListSURes
PDUSessionResourceToBeSwitchedDLList        N ngap.ies id-PDUSessionResourceToBeSwitchedDLList
PDUSessionResourceSwitchedList              N ngap.ies id-PDUSessionResourceSwitchedList
PDUSessionResourceToReleaseListHOCmd        N ngap.ies id-PDUSessionResourceToReleaseListHOCmd
PDUSessionResourceToReleaseListRelCmd       N ngap.ies id-PDUSessionResourceToReleaseListRelCmd
PLMNSupportList                             N ngap.ies id-PLMNSupportList
PWSFailedCellIDList                         N ngap.ies id-PWSFailedCellIDList
RANNodeName                                 N ngap.ies id-RANNodeName
RANPagingPriority                           N ngap.ies id-RANPagingPriority
RANStatusTransfer-TransparentContainer      N ngap.ies id-RANStatusTransfer-TransparentContainer
RAN-UE-NGAP-ID                              N ngap.ies id-RAN-UE-NGAP-ID
RelativeAMFCapacity                         N ngap.ies id-RelativeAMFCapacity
RepetitionPeriod                            N ngap.ies id-RepetitionPeriod
ResetType                                   N ngap.ies id-ResetType
RoutingID                                   N ngap.ies id-RoutingID
RRCEstablishmentCause                       N ngap.ies id-RRCEstablishmentCause
RRCInactiveTransitionReportRequest          N ngap.ies id-RRCInactiveTransitionReportRequest
RRCState                                    N ngap.ies id-RRCState
SecurityContext                             N ngap.ies id-SecurityContext
SecurityKey                                 N ngap.ies id-SecurityKey
SerialNumber                                N ngap.ies id-SerialNumber
ServedGUAMIList                             N ngap.ies id-ServedGUAMIList
SliceSupportList                            N ngap.ies id-SliceSupportList
SONConfigurationTransfer                    N ngap.ies id-SONConfigurationTransferDL
SONConfigurationTransfer                    N ngap.ies id-SONConfigurationTransferUL
AMF-UE-NGAP-ID                              N ngap.ies id-SourceAMF-UE-NGAP-ID
SourceToTarget-TransparentContainer         N ngap.ies id-SourceToTarget-TransparentContainer
SupportedTAList                             N ngap.ies id-SupportedTAList
TAIListForPaging                            N ngap.ies id-TAIListForPaging
TAIListForRestart                           N ngap.ies id-TAIListForRestart
TargetID                                    N ngap.ies id-TargetID
TargetToSource-TransparentContainer         N ngap.ies id-TargetToSource-TransparentContainer
TimeToWait                                  N ngap.ies id-TimeToWait
TraceActivation                             N ngap.ies id-TraceActivation
TransportLayerAddress                       N ngap.ies id-TraceCollectionEntityIPAddress
UEAggregateMaximumBitRate                   N ngap.ies id-UEAggregateMaximumBitRate
UE-associatedLogicalNG-connectionList       N ngap.ies id-UE-associatedLogicalNG-connectionList
UEContextRequest                            N ngap.ies id-UEContextRequest
UE-NGAP-IDs                                 N ngap.ies id-UE-NGAP-IDs
UEPagingIdentity                            N ngap.ies id-UEPagingIdentity
UEPresenceInAreaOfInterestList              N ngap.ies id-UEPresenceInAreaOfInterestList
UERadioCapability                           N ngap.ies id-UERadioCapability
UERadioCapabilityForPaging                  N ngap.ies id-UERadioCapabilityForPaging
UESecurityCapabilities                      N ngap.ies id-UESecurityCapabilities
UnavailableGUAMIList                        N ngap.ies id-UnavailableGUAMIList
UserLocationInformation                     N ngap.ies id-UserLocationInformation
WarningAreaList                             N ngap.ies id-WarningAreaList
WarningMessageContents                      N ngap.ies id-WarningMessageContents
WarningSecurityInfo                         N ngap.ies id-WarningSecurityInfo
WarningType                                 N ngap.ies id-WarningType
UPTransportLayerInformationList             N ngap.ies id-AdditionalUL-NGU-UP-TNLInformation
DataForwardingNotPossible                   N ngap.ies id-DataForwardingNotPossible
NetworkInstance                             N ngap.ies id-NetworkInstance
PDUSessionAggregateMaximumBitRate           N ngap.ies id-PDUSessionAggregateMaximumBitRate
PDUSessionResourceFailedToModifyListModCfm  N ngap.ies id-PDUSessionResourceFailedToModifyListModCfm
PDUSessionResourceFailedToSetupListCxtFail  N ngap.ies id-PDUSessionResourceFailedToSetupListCxtFail
PDUSessionResourceListCxtRelReq             N ngap.ies id-PDUSessionResourceListCxtRelReq
PDUSessionType                              N ngap.ies id-PDUSessionType
QosFlowAddOrModifyRequestList               N ngap.ies id-QosFlowAddOrModifyRequestList
QosFlowSetupRequestList                     N ngap.ies id-QosFlowSetupRequestList
QosFlowListWithCause                        N ngap.ies id-QosFlowToReleaseList
SecurityIndication                          N ngap.ies id-SecurityIndication
UPTransportLayerInformation                 N ngap.ies id-UL-NGU-UP-TNLInformation
UL-NGU-UP-TNLModifyList                     N ngap.ies id-UL-NGU-UP-TNLModifyList
WarningAreaCoordinates                      N ngap.ies id-WarningAreaCoordinates
PDUSessionResourceSecondaryRATUsageList     N ngap.ies id-PDUSessionResourceSecondaryRATUsageList
HandoverFlag                                N ngap.ies id-HandoverFlag
RedirectionVoiceFallback                    N ngap.ies id-RedirectionVoiceFallback
UERetentionInformation                      N ngap.ies id-UERetentionInformation
NGRAN-CGI                                   N ngap.ies id-PSCellInformation
EN-DCSONConfigurationTransfer               N ngap.ies id-ENDC-SONConfigurationTransferDL
EN-DCSONConfigurationTransfer               N ngap.ies id-ENDC-SONConfigurationTransferUL
GUAMI                                       N ngap.ies id-NewGUAMI
CNAssistedRANTuning                         N ngap.ies id-CNAssistedRANTuning
CommonNetworkInstance                       N ngap.ies id-CommonNetworkInstance
NGRAN-TNLAssociationToRemoveList            N ngap.ies id-NGRAN-TNLAssociationToRemoveList
EndpointIPAddressAndPort                    N ngap.ies id-EndpointIPAddressAndPort
SourceToTarget-AMFInformationReroute        N ngap.ies id-SourceToTarget-AMFInformationReroute
RIMInformationTransfer                      N ngap.ies id-RIMInformationTransfer
SRVCCOperationPossible                      N ngap.ies id-SRVCCOperationPossible
TargetRNC-ID                                N ngap.ies id-TargetRNC-ID
UPTransportLayerInformationList             N ngap.ies id-AdditionalRedundantUL-NGU-UP-TNLInformation
CommonNetworkInstance                       N ngap.ies id-RedundantCommonNetworkInstance
UPTransportLayerInformation                 N ngap.ies id-RedundantUL-NGU-UP-TNLInformation
RedundantPDUSessionInformation              N ngap.ies id-RedundantPDUSessionInformation
IAB-Authorized                              N ngap.ies id-IAB-Authorized
IAB-Supported                               N ngap.ies id-IAB-Supported
IABNodeIndication                           N ngap.ies id-IABNodeIndication
NB-IoT-PagingDRX                            N ngap.ies id-NB-IoT-PagingDRX
NB-IoT-Paging-eDRXInfo                      N ngap.ies id-NB-IoT-Paging-eDRXInfo
NB-IoT-DefaultPagingDRX                     N ngap.ies id-NB-IoT-DefaultPagingDRX
Enhanced-CoverageRestriction                N ngap.ies id-Enhanced-CoverageRestriction
Extended-ConnectedTime                      N ngap.ies id-Extended-ConnectedTime
PagingAssisDataforCEcapabUE                 N ngap.ies id-PagingAssisDataforCEcapabUE
WUS-Assistance-Information                  N ngap.ies id-WUS-Assistance-Information
UE-DifferentiationInfo                      N ngap.ies id-UE-DifferentiationInfo
NB-IoT-UEPriority                           N ngap.ies id-NB-IoT-UEPriority
UL-CP-SecurityInformation                   N ngap.ies id-UL-CP-SecurityInformation
DL-CP-SecurityInformation                   N ngap.ies id-DL-CP-SecurityInformation
TAI                                         N ngap.ies id-TAI
LTEV2XServicesAuthorized                    N ngap.ies id-LTEV2XServicesAuthorized
NRV2XServicesAuthorized                     N ngap.ies id-NRV2XServicesAuthorized
LTEUESidelinkAggregateMaximumBitrate        N ngap.ies id-LTEUESidelinkAggregateMaximumBitrate
NRUESidelinkAggregateMaximumBitrate         N ngap.ies id-NRUESidelinkAggregateMaximumBitrate
PC5QoSParameters                            N ngap.ies id-PC5QoSParameters
CEmodeBrestricted                           N ngap.ies id-CEmodeBrestricted
PagingeDRXInformation                       N ngap.ies id-PagingeDRXInformation
CEmodeBSupport-Indicator                    N ngap.ies id-CEmodeBSupport-Indicator
LTEM-Indication                             N ngap.ies id-LTEM-Indication
EndIndication                               N ngap.ies id-EndIndication
EDT-Session                                 N ngap.ies id-EDT-Session
UECapabilityInfoRequest                     N ngap.ies id-UECapabilityInfoRequest
PDUSessionResourceFailedToResumeListRESReq  N ngap.ies id-PDUSessionResourceFailedToResumeListRESReq
PDUSessionResourceFailedToResumeListRESRes  N ngap.ies id-PDUSessionResourceFailedToResumeListRESRes
PDUSessionResourceSuspendListSUSReq         N ngap.ies id-PDUSessionResourceSuspendListSUSReq
PDUSessionResourceResumeListRESReq          N ngap.ies id-PDUSessionResourceResumeListRESReq
PDUSessionResourceResumeListRESRes          N ngap.ies id-PDUSessionResourceResumeListRESRes
UE-UP-CIoT-Support                          N ngap.ies id-UE-UP-CIoT-Support
Suspend-Request-Indication                  N ngap.ies id-Suspend-Request-Indication
Suspend-Response-Indication                 N ngap.ies id-Suspend-Response-Indication
RRCEstablishmentCause                       N ngap.ies id-RRC-Resume-Cause
RGLevelWirelineAccessCharacteristics        N ngap.ies id-RGLevelWirelineAccessCharacteristics
W-AGFIdentityInformation                    N ngap.ies id-W-AGFIdentityInformation
GlobalTNGF-ID                               N ngap.ies id-GlobalTNGF-ID
GlobalTWIF-ID                               N ngap.ies id-GlobalTWIF-ID
GlobalW-AGF-ID                              N ngap.ies id-GlobalW-AGF-ID
UserLocationInformationW-AGF                N ngap.ies id-UserLocationInformationW-AGF
UserLocationInformationTNGF                 N ngap.ies id-UserLocationInformationTNGF
AuthenticatedIndication                     N ngap.ies id-AuthenticatedIndication
TNGFIdentityInformation                     N ngap.ies id-TNGFIdentityInformation
TWIFIdentityInformation                     N ngap.ies id-TWIFIdentityInformation
UserLocationInformationTWIF                 N ngap.ies id-UserLocationInformationTWIF
PLMNIdentity                                N ngap.ies id-SelectedPLMNIdentity
IntersystemSONConfigurationTransfer         N ngap.ies id-IntersystemSONConfigurationTransferDL
IntersystemSONConfigurationTransfer         N ngap.ies id-IntersystemSONConfigurationTransferUL
SONInformationReport                        N ngap.ies id-SONInformationReport
MDTPLMNList                                 N ngap.ies id-ManagementBasedMDTPLMNList
PrivacyIndicator                            N ngap.ies id-PrivacyIndicator
URI-address                                 N ngap.ies id-TraceCollectionEntityURI
NPN-AccessInformation                       N ngap.ies id-NPN-AccessInformation
TargettoSource-Failure-TransparentContainer N ngap.ies id-TargettoSource-Failure-TransparentContainer
UERadioCapabilityID                         N ngap.ies id-UERadioCapabilityID
UERadioCapability                           N ngap.ies id-UERadioCapability-EUTRA-Format
EarlyStatusTransfer-TransparentContainer    N ngap.ies id-EarlyStatusTransfer-TransparentContainer
NotifySourceNGRANNode                       N ngap.ies id-NotifySourceNGRANNode
Extended-RANNodeName                        N ngap.ies id-Extended-RANNodeName
Extended-AMFName                            N ngap.ies id-Extended-AMFName
GlobalCable-ID                              N ngap.ies id-GlobalCable-ID

#NGAP-PROTOCOL-EXTENSION

SecondaryRATUsageInformation                           N ngap.extension id-SecondaryRATUsageInformation
PDUSessionResourceReleaseResponseTransfer-OCTET-STRING N ngap.extension id-PDUSessionResourceReleaseResponseTransfer
S-NSSAI                                                N ngap.extension id-S-NSSAI
PLMNIdentity                                           N ngap.extension id-LastEUTRAN-PLMNIdentity
MaximumIntegrityProtectedDataRate                      N ngap.extension id-MaximumIntegrityProtectedDataRate-DL
QosFlowPerTNLInformationList                           N ngap.extension id-AdditionalDLForwardingUPTNLInformation
AdditionalDLUPTNLInformationForHOList                  N ngap.extension id-AdditionalDLUPTNLInformationForHOList
UPTransportLayerInformationPairList                    N ngap.extension id-AdditionalNGU-UP-TNLInformation
QosFlowPerTNLInformationList                           N ngap.extension id-AdditionalDLQosFlowPerTNLInformation
SecurityResult                                         N ngap.extension id-SecurityResult
AssociatedQosFlowList                                  N ngap.extension id-OldAssociatedQosFlowList-ULendmarkerexpected
CNTypeRestrictionsForEquivalent                        N ngap.extension id-CNTypeRestrictionsForEquivalent
CNTypeRestrictionsForServing                           N ngap.extension id-CNTypeRestrictionsForServing
ULForwarding                                           N ngap.extension id-ULForwarding
UPTransportLayerInformation                            N ngap.extension id-ULForwardingUP-TNLInformation
CPTransportLayerInformation                            N ngap.extension id-TNLAssociationTransportLayerAddressNGRAN
LocationReportingAdditionalInfo                        N ngap.extension id-LocationReportingAdditionalInfo
UPTransportLayerInformationList                        N ngap.extension id-AdditionalULForwardingUPTNLInformation
SCTP-TLAs                                              N ngap.extension id-SCTP-TLAs
DataForwardingResponseERABList                         N ngap.extension id-DataForwardingResponseERABList
GUAMIType                                              N ngap.extension id-GUAMIType
RAT-Information                                        N ngap.extension id-RAT-Information
ExtendedRATRestrictionInformation                      N ngap.extension id-ExtendedRATRestrictionInformation
QosMonitoringRequest                                   N ngap.extension id-QosMonitoringRequest
SgNB-UE-X2AP-ID                                        N ngap.extension id-SgNB-UE-X2AP-ID
UPTransportLayerInformation                            N ngap.extension id-AdditionalRedundantDL-NGU-UP-TNLInformation
QosFlowPerTNLInformationList                           N ngap.extension id-AdditionalRedundantDLQosFlowPerTNLInformation
UPTransportLayerInformationPairList                    N ngap.extension id-AdditionalRedundantNGU-UP-TNLInformation
ExtendedPacketDelayBudget                              N ngap.extension id-CNPacketDelayBudgetDL
ExtendedPacketDelayBudget                              N ngap.extension id-CNPacketDelayBudgetUL
ExtendedPacketDelayBudget                              N ngap.extension id-ExtendedPacketDelayBudget
DL-NGU-TNLInformationReused                            N ngap.extension id-RedundantDL-NGU-TNLInformationReused
UPTransportLayerInformation                            N ngap.extension id-RedundantDL-NGU-UP-TNLInformation
QosFlowPerTNLInformation                               N ngap.extension id-RedundantDLQosFlowPerTNLInformation
RedundantQosFlowIndicator                              N ngap.extension id-RedundantQosFlowIndicator
UPTransportLayerInformation                            N ngap.extension id-RedundantUL-NGU-UP-TNLInformation
TSCTrafficCharacteristics                              N ngap.extension id-TSCTrafficCharacteristics
RedundantPDUSessionInformation                         N ngap.extension id-UsedRSNInformation
PagingAssisDataforCEcapabUE                            N ngap.extension id-PagingAssisDataforCEcapabUE
UERadioCapabilityForPagingOfNB-IoT                     N ngap.extension id-UERadioCapabilityForPagingOfNB-IoT
AlternativeQoSParaSetList                              N ngap.extension id-AlternativeQoSParaSetList
AlternativeQoSParaSetIndex                             N ngap.extension id-CurrentQoSParaSetIndex
PagingeDRXInformation                                  N ngap.extension id-PagingeDRXInformation
UEHistoryInformationFromTheUE                          N ngap.extension id-UEHistoryInformationFromTheUE
MDT-Configuration                                      N ngap.extension id-MDTConfiguration
URI-address                                            N ngap.extension id-TraceCollectionEntityURI
NPN-Support                                            N ngap.extension id-NPN-Support
NPN-PagingAssistanceInformation                        N ngap.extension id-NPN-PagingAssistanceInformation
NPN-MobilityInformation                                N ngap.extension id-NPN-MobilityInformation
NID                                                    N ngap.extension id-NID
DAPSRequestInfo                                        N ngap.extension id-DAPSRequestInfo
DAPSResponseInfoList                                   N ngap.extension id-DAPSResponseInfoList
ExtendedSliceSupportList                               N ngap.extension id-ExtendedSliceSupportList
ExtendedSliceSupportList                               N ngap.extension id-ExtendedTAISliceSupportList
ConfiguredTACIndication                                N ngap.extension id-ConfiguredTACIndication
QosMonitoringReportingFrequency                        N ngap.extension id-QosMonitoringReportingFrequency
QosFlowParametersList                                  N ngap.extension id-QosFlowParametersList
QosFlowFeedbackList                                    N ngap.extension id-QosFlowFeedbackList
BurstArrivalTime                                       N ngap.extension id-BurstArrivalTimeDownlink
ExtendedUEIdentityIndexValue                           N ngap.extension id-ExtendedUEIdentityIndexValue
UERadioCapabilityForPaging                             N ngap.extension id-UERadioCapabilityForPaging
ExpectedUEActivityBehaviour                            N ngap.extension id-PduSessionExpectedUEActivityBehaviour
MicoAllPLMN                                            N ngap.extension id-MicoAllPLMN
QosFlowListWithCause                                   N ngap.extension id-QosFlowFailedToSetupList

#NGAP-ELEMENTARY-PROCEDURE

AMFConfigurationUpdate                  N ngap.proc.imsg id-AMFConfigurationUpdate
AMFConfigurationUpdateAcknowledge       N ngap.proc.sout id-AMFConfigurationUpdate
AMFConfigurationUpdateFailure           N ngap.proc.uout id-AMFConfigurationUpdate

AMFCPRelocationIndication               N ngap.proc.imsg id-AMFCPRelocationIndication

AMFStatusIndication                     N ngap.proc.imsg id-AMFStatusIndication

CellTrafficTrace                        N ngap.proc.imsg id-CellTrafficTrace

ConnectionEstablishmentIndication       N ngap.proc.imsg id-ConnectionEstablishmentIndication

DeactivateTrace                         N ngap.proc.imsg id-DeactivateTrace

DownlinkNASTransport                    N ngap.proc.imsg id-DownlinkNASTransport

DownlinkNonUEAssociatedNRPPaTransport   N ngap.proc.imsg id-DownlinkNonUEAssociatedNRPPaTransport

DownlinkRANConfigurationTransfer        N ngap.proc.imsg id-DownlinkRANConfigurationTransfer

DownlinkRANEarlyStatusTransfer          N ngap.proc.imsg id-DownlinkRANEarlyStatusTransfer

DownlinkRANStatusTransfer               N ngap.proc.imsg id-DownlinkRANStatusTransfer

DownlinkUEAssociatedNRPPaTransport      N ngap.proc.imsg id-DownlinkUEAssociatedNRPPaTransport

ErrorIndication                         N ngap.proc.imsg id-ErrorIndication

HandoverCancel                          N ngap.proc.imsg id-HandoverCancel
HandoverCancelAcknowledge               N ngap.proc.sout id-HandoverCancel

HandoverNotify                          N ngap.proc.imsg id-HandoverNotification

HandoverRequired                        N ngap.proc.imsg id-HandoverPreparation
HandoverCommand                         N ngap.proc.sout id-HandoverPreparation
HandoverPreparationFailure              N ngap.proc.uout id-HandoverPreparation

HandoverRequest                         N ngap.proc.imsg id-HandoverResourceAllocation
HandoverRequestAcknowledge              N ngap.proc.sout id-HandoverResourceAllocation
HandoverFailure                         N ngap.proc.uout id-HandoverResourceAllocation

HandoverSuccess                         N ngap.proc.imsg id-HandoverSuccess

InitialContextSetupRequest              N ngap.proc.imsg id-InitialContextSetup
InitialContextSetupResponse             N ngap.proc.sout id-InitialContextSetup
InitialContextSetupFailure              N ngap.proc.uout id-InitialContextSetup

InitialUEMessage                        N ngap.proc.imsg id-InitialUEMessage

LocationReport                          N ngap.proc.imsg id-LocationReport

LocationReportingControl                N ngap.proc.imsg id-LocationReportingControl

LocationReportingFailureIndication      N ngap.proc.imsg id-LocationReportingFailureIndication

NASNonDeliveryIndication                N ngap.proc.imsg id-NASNonDeliveryIndication

NGReset                                 N ngap.proc.imsg id-NGReset
NGResetAcknowledge                      N ngap.proc.sout id-NGReset

NGSetupRequest                          N ngap.proc.imsg id-NGSetup
NGSetupResponse                         N ngap.proc.sout id-NGSetup
NGSetupFailure                          N ngap.proc.uout id-NGSetup

OverloadStart                           N ngap.proc.imsg id-OverloadStart

OverloadStop                            N ngap.proc.imsg id-OverloadStop

Paging                                  N ngap.proc.imsg id-Paging

PathSwitchRequest                       N ngap.proc.imsg id-PathSwitchRequest
PathSwitchRequestAcknowledge            N ngap.proc.sout id-PathSwitchRequest
PathSwitchRequestFailure                N ngap.proc.uout id-PathSwitchRequest

PDUSessionResourceModifyRequest         N ngap.proc.imsg id-PDUSessionResourceModify
PDUSessionResourceModifyResponse        N ngap.proc.sout id-PDUSessionResourceModify

PDUSessionResourceModifyIndication      N ngap.proc.imsg id-PDUSessionResourceModifyIndication
PDUSessionResourceModifyConfirm         N ngap.proc.sout id-PDUSessionResourceModifyIndication

PDUSessionResourceNotify                N ngap.proc.imsg id-PDUSessionResourceNotify

PDUSessionResourceReleaseCommand        N ngap.proc.imsg id-PDUSessionResourceRelease
PDUSessionResourceReleaseResponse       N ngap.proc.sout id-PDUSessionResourceRelease

PDUSessionResourceSetupRequest          N ngap.proc.imsg id-PDUSessionResourceSetup
PDUSessionResourceSetupResponse         N ngap.proc.sout id-PDUSessionResourceSetup

PrivateMessage                          N ngap.proc.imsg id-PrivateMessage

PWSCancelRequest                        N ngap.proc.imsg id-PWSCancel
PWSCancelResponse                       N ngap.proc.sout id-PWSCancel

PWSFailureIndication                    N ngap.proc.imsg id-PWSFailureIndication

PWSRestartIndication                    N ngap.proc.imsg id-PWSRestartIndication

RANConfigurationUpdate                  N ngap.proc.imsg id-RANConfigurationUpdate
RANConfigurationUpdateAcknowledge       N ngap.proc.sout id-RANConfigurationUpdate
RANConfigurationUpdateFailure           N ngap.proc.uout id-RANConfigurationUpdate

RANCPRelocationIndication               N ngap.proc.imsg id-RANCPRelocationIndication

RerouteNASRequest                       N ngap.proc.imsg id-RerouteNASRequest

RetrieveUEInformation                   N ngap.proc.imsg id-RetrieveUEInformation

RRCInactiveTransitionReport             N ngap.proc.imsg id-RRCInactiveTransitionReport

SecondaryRATDataUsageReport             N ngap.proc.imsg id-SecondaryRATDataUsageReport

TraceFailureIndication                  N ngap.proc.imsg id-TraceFailureIndication

TraceStart                              N ngap.proc.imsg id-TraceStart

UEContextModificationRequest            N ngap.proc.imsg id-UEContextModification
UEContextModificationResponse           N ngap.proc.sout id-UEContextModification
UEContextModificationFailure            N ngap.proc.uout id-UEContextModification

UEContextReleaseCommand                 N ngap.proc.imsg id-UEContextRelease
UEContextReleaseComplete                N ngap.proc.sout id-UEContextRelease

UEContextReleaseRequest                 N ngap.proc.imsg id-UEContextReleaseRequest

UEContextResumeRequest                  N ngap.proc.imsg id-UEContextResume
UEContextResumeResponse                 N ngap.proc.sout id-UEContextResume
UEContextResumeFailure                  N ngap.proc.uout id-UEContextResume

UEContextSuspendRequest                 N ngap.proc.imsg id-UEContextSuspend
UEContextSuspendResponse                N ngap.proc.sout id-UEContextSuspend
UEContextSuspendFailure                 N ngap.proc.uout id-UEContextSuspend

UEInformationTransfer                   N ngap.proc.imsg id-UEInformationTransfer

UERadioCapabilityCheckRequest           N ngap.proc.imsg id-UERadioCapabilityCheck
UERadioCapabilityCheckResponse          N ngap.proc.sout id-UERadioCapabilityCheck

UERadioCapabilityIDMappingRequest       N ngap.proc.imsg id-UERadioCapabilityIDMapping
UERadioCapabilityIDMappingResponse      N ngap.proc.sout id-UERadioCapabilityIDMapping

UERadioCapabilityInfoIndication         N ngap.proc.imsg id-UERadioCapabilityInfoIndication

UETNLABindingReleaseRequest             N ngap.proc.imsg id-UETNLABindingRelease

UplinkNASTransport                      N ngap.proc.imsg id-UplinkNASTransport

UplinkNonUEAssociatedNRPPaTransport     N ngap.proc.imsg id-UplinkNonUEAssociatedNRPPaTransport

UplinkRANConfigurationTransfer          N ngap.proc.imsg id-UplinkRANConfigurationTransfer

UplinkRANEarlyStatusTransfer            N ngap.proc.imsg id-UplinkRANEarlyStatusTransfer

UplinkRANStatusTransfer                 N ngap.proc.imsg id-UplinkRANStatusTransfer

UplinkUEAssociatedNRPPaTransport        N ngap.proc.imsg id-UplinkUEAssociatedNRPPaTransport

WriteReplaceWarningRequest              N ngap.proc.imsg id-WriteReplaceWarning
WriteReplaceWarningResponse             N ngap.proc.sout id-WriteReplaceWarning

UplinkRIMInformationTransfer            N ngap.proc.imsg id-UplinkRIMInformationTransfer

DownlinkRIMInformationTransfer          N ngap.proc.imsg id-DownlinkRIMInformationTransfer

PDUSessionResourceSetupRequestTransfer         S ngap.n2_ie_type "PDU_RES_SETUP_REQ"
PDUSessionResourceSetupResponseTransfer        S ngap.n2_ie_type "PDU_RES_SETUP_RSP"
PDUSessionResourceSetupUnsuccessfulTransfer    S ngap.n2_ie_type "PDU_RES_SETUP_FAIL"
PDUSessionResourceReleaseCommandTransfer       S ngap.n2_ie_type "PDU_RES_REL_CMD"
PDUSessionResourceReleaseResponseTransfer      S ngap.n2_ie_type "PDU_RES_REL_RSP"
PDUSessionResourceModifyRequestTransfer        S ngap.n2_ie_type "PDU_RES_MOD_REQ"
PDUSessionResourceModifyResponseTransfer       S ngap.n2_ie_type "PDU_RES_MOD_RSP"
PDUSessionResourceModifyUnsuccessfulTransfer   S ngap.n2_ie_type "PDU_RES_MOD_FAIL"
PDUSessionResourceNotifyTransfer               S ngap.n2_ie_type "PDU_RES_NTY"
PDUSessionResourceNotifyReleasedTransfer       S ngap.n2_ie_type "PDU_RES_NTY_REL"
PDUSessionResourceModifyIndicationTransfer     S ngap.n2_ie_type "PDU_RES_MOD_IND"
PDUSessionResourceModifyConfirmTransfer        S ngap.n2_ie_type "PDU_RES_MOD_CFM"
PathSwitchRequestTransfer                      S ngap.n2_ie_type "PATH_SWITCH_REQ"
PathSwitchRequestSetupFailedTransfer           S ngap.n2_ie_type "PATH_SWITCH_SETUP_FAIL"
PathSwitchRequestAcknowledgeTransfer           S ngap.n2_ie_type "PATH_SWITCH_REQ_ACK"
PathSwitchRequestUnsuccessfulTransfer          S ngap.n2_ie_type "PATH_SWITCH_REQ_FAIL"
HandoverRequiredTransfer                       S ngap.n2_ie_type "HANDOVER_REQUIRED"
HandoverCommandTransfer                        S ngap.n2_ie_type "HANDOVER_CMD"
HandoverPreparationUnsuccessfulTransfer        S ngap.n2_ie_type "HANDOVER_PREP_FAIL"
HandoverRequestAcknowledgeTransfer             S ngap.n2_ie_type "HANDOVER_REQ_ACK"
HandoverResourceAllocationUnsuccessfulTransfer S ngap.n2_ie_type "HANDOVER_RES_ALLOC_FAIL"
SecondaryRATDataUsageReportTransfer            S ngap.n2_ie_type "SECONDARY_RAT_USAGE"
PDUSessionResourceModifyIndicationUnsuccessfulTransfer S ngap.n2_ie_type "PDU_RES_MOD_IND_FAIL"
SourceToTarget-TransparentContainer            S ngap.n2_ie_type "SRC_TO_TAR_CONTAINER"
TargetToSource-TransparentContainer            S ngap.n2_ie_type "TAR_TO_SRC_CONTAINER"
RANStatusTransfer-TransparentContainer         S ngap.n2_ie_type "RAN_STATUS_TRANS_CONTAINER"
SONConfigurationTransfer                       S ngap.n2_ie_type "SON_CONFIG_TRANSFER"
NRPPa-PDU                                      S ngap.n2_ie_type "NRPPA_PDU"
UERadioCapability                              S ngap.n2_ie_type "UE_RADIO_CAPABILITY"

#.FN_HDR AMFConfigurationUpdate
  set_message_label(actx, MTYPE_AMF_CONFIGURATION_UPDATE);
  set_stats_message_type(actx->pinfo, MTYPE_AMF_CONFIGURATION_UPDATE);

#.FN_HDR AMFConfigurationUpdateAcknowledge
  set_message_label(actx, MTYPE_AMF_CONFIGURATION_UPDATE_ACK);
  set_stats_message_type(actx->pinfo, MTYPE_AMF_CONFIGURATION_UPDATE_ACK);

#.FN_HDR AMFConfigurationUpdateFailure
  set_message_label(actx, MTYPE_AMF_CONFIGURATION_UPDATE_FAILURE);
  set_stats_message_type(actx->pinfo, MTYPE_AMF_CONFIGURATION_UPDATE_FAILURE);

#.FN_HDR AMFCPRelocationIndication
  set_message_label(actx, MTYPE_AMF_CP_RELOCATION_IND);
  set_stats_message_type(actx->pinfo, MTYPE_AMF_CP_RELOCATION_IND);

#.FN_HDR AMFStatusIndication
  set_message_label(actx, MTYPE_AMF_STATUS_IND);
  set_stats_message_type(actx->pinfo, MTYPE_AMF_STATUS_IND);

#.FN_HDR CellTrafficTrace
  set_message_label(actx, MTYPE_CELL_TRAFFIC_TRACE);
  set_stats_message_type(actx->pinfo, MTYPE_CELL_TRAFFIC_TRACE);

#.FN_HDR ConnectionEstablishmentIndication
  set_message_label(actx, MTYPE_CONNECTION_ESTAB_IND);
  set_stats_message_type(actx->pinfo, MTYPE_CONNECTION_ESTAB_IND);

#.FN_HDR DeactivateTrace
  set_message_label(actx, MTYPE_DEACTIVATE_TRACE);
  set_stats_message_type(actx->pinfo, MTYPE_DEACTIVATE_TRACE);

#.FN_HDR DownlinkNASTransport
  set_message_label(actx, MTYPE_DOWNLINK_NAS_TRANSPORT);
  set_stats_message_type(actx->pinfo, MTYPE_DOWNLINK_NAS_TRANSPORT);

#.FN_HDR DownlinkNonUEAssociatedNRPPaTransport
  set_message_label(actx, MTYPE_DOWNLINK_NON_UE_ASSOCIATED_NR_PPA_TRANSPORT);
  set_stats_message_type(actx->pinfo, MTYPE_DOWNLINK_NON_UE_ASSOCIATED_NR_PPA_TRANSPORT);

#.FN_HDR DownlinkRANConfigurationTransfer
  set_message_label(actx, MTYPE_DOWNLINK_RAN_CONFIGURATION_TRANSFER);
  set_stats_message_type(actx->pinfo, MTYPE_DOWNLINK_RAN_CONFIGURATION_TRANSFER);

#.FN_HDR DownlinkRANEarlyStatusTransfer
  set_message_label(actx, MTYPE_DOWNLINK_RAN_EARLY_STATUS_TRANSFER);
  set_stats_message_type(actx->pinfo, MTYPE_DOWNLINK_RAN_EARLY_STATUS_TRANSFER);

#.FN_HDR DownlinkRANStatusTransfer
  set_message_label(actx, MTYPE_DOWNLINK_RAN_STATUS_TRANSFER);
  set_stats_message_type(actx->pinfo, MTYPE_DOWNLINK_RAN_STATUS_TRANSFER);

#.FN_HDR DownlinkUEAssociatedNRPPaTransport
  set_message_label(actx, MTYPE_DOWNLINK_UE_ASSOCIATED_NR_PPA_TRANSPORT);
  set_stats_message_type(actx->pinfo, MTYPE_DOWNLINK_UE_ASSOCIATED_NR_PPA_TRANSPORT);

#.FN_HDR ErrorIndication
  set_message_label(actx, MTYPE_ERROR_INDICATION);
  set_stats_message_type(actx->pinfo, MTYPE_ERROR_INDICATION);

#.FN_HDR HandoverCancel
  set_message_label(actx, MTYPE_HANDOVER_CANCEL);
  set_stats_message_type(actx->pinfo, MTYPE_HANDOVER_CANCEL);

#.FN_HDR HandoverCancelAcknowledge
  set_message_label(actx, MTYPE_HANDOVER_CANCEL_ACK);
  set_stats_message_type(actx->pinfo, MTYPE_HANDOVER_CANCEL_ACK);

#.FN_HDR HandoverNotify
  set_message_label(actx, MTYPE_HANDOVER_NOTIFY);
  set_stats_message_type(actx->pinfo, MTYPE_HANDOVER_NOTIFY);

#.FN_HDR HandoverRequired
  set_message_label(actx, MTYPE_HANDOVER_REQUIRED);
  set_stats_message_type(actx->pinfo, MTYPE_HANDOVER_REQUIRED);

#.FN_HDR HandoverCommand
  set_message_label(actx, MTYPE_HANDOVER_COMMAND);
  set_stats_message_type(actx->pinfo, MTYPE_HANDOVER_COMMAND);

#.FN_HDR HandoverPreparationFailure
  set_message_label(actx, MTYPE_HANDOVER_PREPARATION_FAILURE);
  set_stats_message_type(actx->pinfo, MTYPE_HANDOVER_PREPARATION_FAILURE);

#.FN_HDR HandoverRequest
  set_message_label(actx, MTYPE_HANDOVER_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_HANDOVER_REQUEST);

#.FN_HDR HandoverRequestAcknowledge
  set_message_label(actx, MTYPE_HANDOVER_REQUEST_ACK);
  set_stats_message_type(actx->pinfo, MTYPE_HANDOVER_REQUEST_ACK);

#.FN_HDR HandoverFailure
  set_message_label(actx, MTYPE_HANDOVER_FAILURE);
  set_stats_message_type(actx->pinfo, MTYPE_HANDOVER_FAILURE);

#.FN_HDR HandoverSuccess
  set_message_label(actx, MTYPE_HANDOVER_SUCCESS);
  set_stats_message_type(actx->pinfo, MTYPE_HANDOVER_SUCCESS);

#.FN_HDR InitialContextSetupRequest
  set_message_label(actx, MTYPE_INITIAL_CONTEXT_SETUP_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_INITIAL_CONTEXT_SETUP_REQUEST);

#.FN_HDR InitialContextSetupResponse
  set_message_label(actx, MTYPE_INITIAL_CONTEXT_SETUP_RESPONSE);
  set_stats_message_type(actx->pinfo, MTYPE_INITIAL_CONTEXT_SETUP_RESPONSE);

#.FN_HDR InitialContextSetupFailure
  set_message_label(actx, MTYPE_INITIAL_CONTEXT_SETUP_FAILURE);
  set_stats_message_type(actx->pinfo, MTYPE_INITIAL_CONTEXT_SETUP_FAILURE);

#.FN_HDR InitialUEMessage
  set_message_label(actx, MTYPE_INITIAL_UE_MESSAGE);
  set_stats_message_type(actx->pinfo, MTYPE_INITIAL_UE_MESSAGE);

#.FN_HDR LocationReport
  set_message_label(actx, MTYPE_LOCATION_REPORT);
  set_stats_message_type(actx->pinfo, MTYPE_LOCATION_REPORT);

#.FN_HDR LocationReportingControl
  set_message_label(actx, MTYPE_LOCATION_REPORTING_CONTROL);
  set_stats_message_type(actx->pinfo, MTYPE_LOCATION_REPORTING_CONTROL);

#.FN_HDR LocationReportingFailureIndication
  set_message_label(actx, MTYPE_LOCATION_REPORTING_FAILURE_IND);
  set_stats_message_type(actx->pinfo, MTYPE_LOCATION_REPORTING_FAILURE_IND);

#.FN_HDR NASNonDeliveryIndication
  set_message_label(actx, MTYPE_NAS_NON_DELIVERY_IND);
  set_stats_message_type(actx->pinfo, MTYPE_NAS_NON_DELIVERY_IND);

#.FN_HDR NGReset
  set_message_label(actx, MTYPE_NG_RESET);
  set_stats_message_type(actx->pinfo, MTYPE_NG_RESET);

#.FN_HDR NGResetAcknowledge
  set_message_label(actx, MTYPE_NG_RESET_ACK);
  set_stats_message_type(actx->pinfo, MTYPE_NG_RESET_ACK);

#.FN_HDR NGSetupRequest
  set_message_label(actx, MTYPE_NG_SETUP_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_NG_SETUP_REQUEST);

#.FN_HDR NGSetupResponse
  set_message_label(actx, MTYPE_NG_SETUP_RESPONSE);
  set_stats_message_type(actx->pinfo, MTYPE_NG_SETUP_RESPONSE);

#.FN_HDR NGSetupFailure
  set_message_label(actx, MTYPE_NG_SETUP_FAILURE);
  set_stats_message_type(actx->pinfo, MTYPE_NG_SETUP_FAILURE);

#.FN_HDR OverloadStart
  set_message_label(actx, MTYPE_OVERLOAD_START);
  set_stats_message_type(actx->pinfo, MTYPE_OVERLOAD_START);

#.FN_HDR OverloadStop
  set_message_label(actx, MTYPE_OVERLOAD_STOP);
  set_stats_message_type(actx->pinfo, MTYPE_OVERLOAD_STOP);

#.FN_HDR Paging
  set_message_label(actx, MTYPE_PAGING);
  set_stats_message_type(actx->pinfo, MTYPE_PAGING);

#.FN_HDR PathSwitchRequest
  set_message_label(actx, MTYPE_PATH_SWITCH_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_PATH_SWITCH_REQUEST);

#.FN_HDR PathSwitchRequestAcknowledge
  set_message_label(actx, MTYPE_PATH_SWITCH_REQUEST_ACK);
  set_stats_message_type(actx->pinfo, MTYPE_PATH_SWITCH_REQUEST_ACK);

#.FN_HDR PathSwitchRequestFailure
  set_message_label(actx, MTYPE_PATH_SWITCH_REQUEST_FAILURE);
  set_stats_message_type(actx->pinfo, MTYPE_PATH_SWITCH_REQUEST_FAILURE);

#.FN_HDR PDUSessionResourceModifyRequest
  set_message_label(actx, MTYPE_PDU_SESSION_RESOURCE_MODIFY_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_PDU_SESSION_RESOURCE_MODIFY_REQUEST);

#.FN_HDR PDUSessionResourceModifyResponse
  set_message_label(actx, MTYPE_PDU_SESSION_RESOURCE_MODIFY_RESPONSE);
  set_stats_message_type(actx->pinfo, MTYPE_PDU_SESSION_RESOURCE_MODIFY_RESPONSE);

#.FN_HDR PDUSessionResourceModifyIndication
  set_message_label(actx, MTYPE_PDU_SESSION_RESOURCE_MODIFY_IND);
  set_stats_message_type(actx->pinfo, MTYPE_PDU_SESSION_RESOURCE_MODIFY_IND);

#.FN_HDR PDUSessionResourceModifyConfirm
  set_message_label(actx, MTYPE_PDU_SESSION_RESOURCE_MODIFY_CONFIRM);
  set_stats_message_type(actx->pinfo, MTYPE_PDU_SESSION_RESOURCE_MODIFY_CONFIRM);

#.FN_HDR PDUSessionResourceNotify
  set_message_label(actx, MTYPE_PDU_SESSION_RESOURCE_NOTIFY);
  set_stats_message_type(actx->pinfo, MTYPE_PDU_SESSION_RESOURCE_NOTIFY);

#.FN_HDR PDUSessionResourceReleaseCommand
  set_message_label(actx, MTYPE_PDU_SESSION_RESOURCE_RELEASE_COMMAND);
  set_stats_message_type(actx->pinfo, MTYPE_PDU_SESSION_RESOURCE_RELEASE_COMMAND);

#.FN_HDR PDUSessionResourceReleaseResponse
  set_message_label(actx, MTYPE_PDU_SESSION_RESOURCE_RELEASE_RESPONSE);
  set_stats_message_type(actx->pinfo, MTYPE_PDU_SESSION_RESOURCE_RELEASE_RESPONSE);

#.FN_HDR PDUSessionResourceSetupRequest
  set_message_label(actx, MTYPE_PDU_SESSION_RESOURCE_SETUP_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_PDU_SESSION_RESOURCE_SETUP_REQUEST);

#.FN_HDR PDUSessionResourceSetupResponse
  set_message_label(actx, MTYPE_PDU_SESSION_RESOURCE_SETUP_RESPONSE);
  set_stats_message_type(actx->pinfo, MTYPE_PDU_SESSION_RESOURCE_SETUP_RESPONSE);

#.FN_HDR PrivateMessage
  set_message_label(actx, MTYPE_PRIVATE_MESSAGE);
  set_stats_message_type(actx->pinfo, MTYPE_PRIVATE_MESSAGE);

#.FN_HDR PWSCancelRequest
  set_message_label(actx, MTYPE_PWS_CANCEL_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_PWS_CANCEL_REQUEST);

#.FN_HDR PWSCancelResponse
  set_message_label(actx, MTYPE_PWS_CANCEL_RESPONSE);
  set_stats_message_type(actx->pinfo, MTYPE_PWS_CANCEL_RESPONSE);

#.FN_HDR PWSFailureIndication
  set_message_label(actx, MTYPE_PWS_FAILURE_INDICATION);
  set_stats_message_type(actx->pinfo, MTYPE_PWS_FAILURE_INDICATION);

#.FN_HDR PWSRestartIndication
  set_message_label(actx, MTYPE_PWS_RESTART_INDICATION);
  set_stats_message_type(actx->pinfo, MTYPE_PWS_RESTART_INDICATION);

#.FN_HDR RANConfigurationUpdate
  set_message_label(actx, MTYPE_RAN_CONFIGURATION_UPDATE);
  set_stats_message_type(actx->pinfo, MTYPE_RAN_CONFIGURATION_UPDATE);

#.FN_HDR RANConfigurationUpdateAcknowledge
  set_message_label(actx, MTYPE_RAN_CONFIGURATION_UPDATE_ACK);
  set_stats_message_type(actx->pinfo, MTYPE_RAN_CONFIGURATION_UPDATE_ACK);

#.FN_HDR RANConfigurationUpdateFailure
  set_message_label(actx, MTYPE_RAN_CONFIGURATION_UPDATE_FAILURE);
  set_stats_message_type(actx->pinfo, MTYPE_RAN_CONFIGURATION_UPDATE_FAILURE);

#.FN_HDR RANCPRelocationIndication
  set_message_label(actx, MTYPE_RAN_CP_RELOCATION_IND);
  set_stats_message_type(actx->pinfo, MTYPE_RAN_CP_RELOCATION_IND);

#.FN_HDR RerouteNASRequest
  set_message_label(actx, MTYPE_REROUTE_NAS_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_REROUTE_NAS_REQUEST);

#.FN_HDR RetrieveUEInformation
  set_message_label(actx, MTYPE_RETRIEVE_UE_INFORMATION);
  set_stats_message_type(actx->pinfo, MTYPE_RETRIEVE_UE_INFORMATION);

#.FN_HDR RRCInactiveTransitionReport
  set_message_label(actx, MTYPE_RRC_INACTIVE_TRANSITION_REPORT);
  set_stats_message_type(actx->pinfo, MTYPE_RRC_INACTIVE_TRANSITION_REPORT);

#.FN_HDR SecondaryRATDataUsageReport
  set_message_label(actx, MTYPE_SECONDARY_RAT_DATA_USAGE_REPORT);
  set_stats_message_type(actx->pinfo, MTYPE_SECONDARY_RAT_DATA_USAGE_REPORT);

#.FN_HDR TraceFailureIndication
  set_message_label(actx, MTYPE_TRACE_FAILURE_IND);
  set_stats_message_type(actx->pinfo, MTYPE_TRACE_FAILURE_IND);

#.FN_HDR TraceStart
  set_message_label(actx, MTYPE_TRACE_START);
  set_stats_message_type(actx->pinfo, MTYPE_TRACE_START);

#.FN_HDR UEContextModificationRequest
  set_message_label(actx, MTYPE_UE_CONTEXT_MODIFICATION_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_UE_CONTEXT_MODIFICATION_REQUEST);

#.FN_HDR UEContextModificationResponse
  set_message_label(actx, MTYPE_UE_CONTEXT_MODIFICATION_RESPONSE);
  set_stats_message_type(actx->pinfo, MTYPE_UE_CONTEXT_MODIFICATION_RESPONSE);

#.FN_HDR UEContextModificationFailure
  set_message_label(actx, MTYPE_UE_CONTEXT_MODIFICATION_FAILURE);
  set_stats_message_type(actx->pinfo, MTYPE_UE_CONTEXT_MODIFICATION_FAILURE);

#.FN_HDR UEContextReleaseCommand
  set_message_label(actx, MTYPE_UE_CONTEXT_RELEASE_COMMAND);
  set_stats_message_type(actx->pinfo, MTYPE_UE_CONTEXT_RELEASE_COMMAND);

#.FN_HDR UEContextReleaseComplete
  set_message_label(actx, MTYPE_UE_CONTEXT_RELEASE_COMPLETE);
  set_stats_message_type(actx->pinfo, MTYPE_UE_CONTEXT_RELEASE_COMPLETE);

#.FN_HDR UEContextReleaseRequest
  set_message_label(actx, MTYPE_UE_CONTEXT_RELEASE_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_UE_CONTEXT_RELEASE_REQUEST);

#.FN_HDR UEContextResumeRequest
  set_message_label(actx, MTYPE_UE_CONTEXT_RESUME_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_UE_CONTEXT_RESUME_REQUEST);

#.FN_HDR UEContextResumeResponse
  set_message_label(actx, MTYPE_UE_CONTEXT_RESUME_RESPONSE);
  set_stats_message_type(actx->pinfo, MTYPE_UE_CONTEXT_RESUME_RESPONSE);

#.FN_HDR UEContextResumeFailure
  set_message_label(actx, MTYPE_UE_CONTEXT_RESUME_FAILURE);
  set_stats_message_type(actx->pinfo, MTYPE_UE_CONTEXT_RESUME_FAILURE);

#.FN_HDR UEContextSuspendRequest
  set_message_label(actx, MTYPE_UE_CONTEXT_SUSPEND_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_UE_CONTEXT_SUSPEND_REQUEST);

#.FN_HDR UEContextSuspendResponse
  set_message_label(actx, MTYPE_UE_CONTEXT_SUSPEND_RESPONSE);
  set_stats_message_type(actx->pinfo, MTYPE_UE_CONTEXT_SUSPEND_RESPONSE);

#.FN_HDR UEContextSuspendFailure
  set_message_label(actx, MTYPE_UE_CONTEXT_SUSPEND_FAILURE);
  set_stats_message_type(actx->pinfo, MTYPE_UE_CONTEXT_SUSPEND_FAILURE);

#.FN_HDR UEInformationTransfer
  set_message_label(actx, MTYPE_UE_INFORMATION_TRANSFER);
  set_stats_message_type(actx->pinfo, MTYPE_UE_INFORMATION_TRANSFER);

#.FN_HDR UERadioCapabilityCheckRequest
  set_message_label(actx, MTYPE_UE_RADIO_CAPABILITY_CHECK_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_UE_RADIO_CAPABILITY_CHECK_REQUEST);

#.FN_HDR UERadioCapabilityCheckResponse
  set_message_label(actx, MTYPE_UE_RADIO_CAPABILITY_CHECK_RESPONSE);
  set_stats_message_type(actx->pinfo, MTYPE_UE_RADIO_CAPABILITY_CHECK_RESPONSE);

#.FN_HDR UERadioCapabilityIDMappingRequest
  set_message_label(actx, MTYPE_UE_RADIO_CAPABILITY_ID_MAPPING_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_UE_RADIO_CAPABILITY_ID_MAPPING_REQUEST);

#.FN_HDR UERadioCapabilityIDMappingResponse
  set_message_label(actx, MTYPE_UE_RADIO_CAPABILITY_ID_MAPPING_RESPONSE);
  set_stats_message_type(actx->pinfo, MTYPE_UE_RADIO_CAPABILITY_ID_MAPPING_RESPONSE);

#.FN_HDR UERadioCapabilityInfoIndication
  set_message_label(actx, MTYPE_UE_RADIO_CAPABILITY_INFO_IND);
  set_stats_message_type(actx->pinfo, MTYPE_UE_RADIO_CAPABILITY_INFO_IND);

#.FN_HDR UETNLABindingReleaseRequest
  set_message_label(actx, MTYPE_UE_TN_LAB_BINDING_RELEASE_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_UE_TN_LAB_BINDING_RELEASE_REQUEST);

#.FN_HDR UplinkNASTransport
  set_message_label(actx, MTYPE_UPLINK_NAS_TRANSPORT);
  set_stats_message_type(actx->pinfo, MTYPE_UPLINK_NAS_TRANSPORT);

#.FN_HDR UplinkNonUEAssociatedNRPPaTransport
  set_message_label(actx, MTYPE_UPLINK_NON_UE_ASSOCIATED_NR_PPA_TRANSPORT);
  set_stats_message_type(actx->pinfo, MTYPE_UPLINK_NON_UE_ASSOCIATED_NR_PPA_TRANSPORT);

#.FN_HDR UplinkRANConfigurationTransfer
  set_message_label(actx, MTYPE_UPLINK_RAN_CONFIGURATION_TRANSFER);
  set_stats_message_type(actx->pinfo, MTYPE_UPLINK_RAN_CONFIGURATION_TRANSFER);

#.FN_HDR UplinkRANEarlyStatusTransfer
  set_message_label(actx, MTYPE_UPLINK_RAN_EARLY_STATUS_TRANSFER);
  set_stats_message_type(actx->pinfo, MTYPE_UPLINK_RAN_EARLY_STATUS_TRANSFER);

#.FN_HDR UplinkRANStatusTransfer
  set_message_label(actx, MTYPE_UPLINK_RAN_STATUS_TRANSFER);
  set_stats_message_type(actx->pinfo, MTYPE_UPLINK_RAN_STATUS_TRANSFER);

#.FN_HDR UplinkUEAssociatedNRPPaTransport
  set_message_label(actx, MTYPE_UPLINK_UE_ASSOCIATED_NR_PPA_TRANSPORT);
  set_stats_message_type(actx->pinfo, MTYPE_UPLINK_UE_ASSOCIATED_NR_PPA_TRANSPORT);

#.FN_HDR WriteReplaceWarningRequest
  set_message_label(actx, MTYPE_WRITE_REPLACE_WARNING_REQUEST);
  set_stats_message_type(actx->pinfo, MTYPE_WRITE_REPLACE_WARNING_REQUEST);

#.FN_HDR WriteReplaceWarningResponse
  set_message_label(actx, MTYPE_WRITE_REPLACE_WARNING_RESPONSE);
  set_stats_message_type(actx->pinfo, MTYPE_WRITE_REPLACE_WARNING_RESPONSE);

#.FN_HDR UplinkRIMInformationTransfer
  set_message_label(actx, MTYPE_UPLINK_RIM_INFORMATION_TRANSFER);
  set_stats_message_type(actx->pinfo, MTYPE_UPLINK_RIM_INFORMATION_TRANSFER);

#.FN_HDR DownlinkRIMInformationTransfer
  set_message_label(actx, MTYPE_DOWNLINK_RIM_INFORMATION_TRANSFER);
  set_stats_message_type(actx->pinfo, MTYPE_DOWNLINK_RIM_INFORMATION_TRANSFER);

#
# Editor modelines  -  https://www.wireshark.org/tools/modelines.html
#
# Local variables:
# c-basic-offset: 2
# tab-width: 8
# indent-tabs-mode: nil
# End:
#
# vi: set shiftwidth=2 tabstop=8 expandtab:
# :indentSize=2:tabSize=8:noTabs=true:
#
